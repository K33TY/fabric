This is Fabric.


To build Fabric:
1. check out polyglot, jif, and fabric
2. build polyglot:
    polyglot$ ant
    polyglot$ ant jar
3. build jif:
	jif$ for i in `pwd`/../polyglot/lib/*.jar; do classpath=$classpath:$i; done; export CLASSPATH=$classpath
	jif$ export JAVA_HOME=/usr/lib/jvm/java-6-sun
	jif$ ant
4. copy config.properties.in to config.properties and edit it appropriately
5. ant

    

To set up your environment for Fabric:

Set $FABRIC_HOME to the project's top-level directory
Copy config.properties.in to config.properties and edit as appropriate.

To compile an application:
use the "fabc" script, or run fabric.Main with java, e.g.:
java fabric.Main tests/OO7/*.fab -d rt-classes -sourcepath src/runtime:tests -sigcp sig-classes

To start a core:
use the "fab-core" script, or run fabric.core.Main with java, e.g.:
java fabric.core.Main --core core0 etc/keys/core0.keystore etc/keys/trust.keystore password

To start a worker (coming soon):
use the "fab-worker" script

To run an application:
use the "fab" script, or run fabric.worker.Worker with java, e.g.:
java fabric.worker.Worker OO7.Benchmark fab://core0/OO7 tiny 3
java fabric.worker.Worker OO7.traversals.T1 fab://core0/OO7 --hot
  (Make sure you have $FABRIC_HOME set properly!)


Eclipse setup:
The set up eclipse for Fabric, your project's classpath should have the
following entries:

* source folder src/compiler
* source folder src/system
* class folder classes
* class folder rt-classes
* jar files from lib folder
* Polyglot project or Polyglot jar/classes
