<!-- Common definitions. -->

<project name="fabric.common">
  <dirname property="fabric.home" file="${ant.file.fabric.common}" />

  <!-- set the prefix for accessing environment variables -->
  <property environment="env" />

  <property file="${fabric.home}/config.properties" />

  <!-- Polyglot installation location -->
  <!-- If it is not defined in the properties file, use the environment
       variable $POLYGLOT. -->
  <condition property="polyglot.home" value="${env.POLYGLOT}">
    <and>
      <isset property="env.POLYGLOT" />
      <not>
        <isset property="polyglot.home" />
      </not>
    </and>
  </condition>
  <!-- As a last resort, try to use polyglot.jar from distribution -->
  <condition property="polyglot.home" value="${fabric.home}">
    <not><isset property="polyglot.home" /></not>
  </condition>

  <!-- Jif installation -->
  <!-- If it is not defined in the properties file, use the environment
       variable $JIF. -->
  <condition property="jif.home" value="${env.JIF}">
    <and>
      <isset property="env.JIF" />
      <not>
        <isset property="jif.home" />
      </not>
    </and>
  </condition>
  <!-- As a last resort, try to use jif.jar from distribution -->
  <condition property="jif.home" value="${fabric.home}">
    <not><isset property="jif.home" /></not>
  </condition>

  <!-- Directories for class file targets -->
  <property name="classes" location="${fabric.home}/classes"/>
  <property name="runtime.classes" location="${fabric.home}/rt-classes"/>

  <!-- Binaries directory -->
  <property name="bin" location="${fabric.home}/bin"/>

  <!-- Library directory -->
  <property name="lib" location="${fabric.home}/lib"/>

  <!-- fabc executable -->
  <property name="fabc" location="${bin}/fabc" />

  <!-- filc executable -->
  <property name="filc" location="${bin}/filc" />

  <!-- Debug flag to be passed to fabc and filc. -->
  <property name="debug.flag" value="-g" />

  <!-- Polyglot classpath -->
  <path id="polyglot.classpath">
    <pathelement path="${polyglot.home}/classes" />
    <pathelement path="${polyglot.home}/lib/polyglot.jar" />
    <pathelement path="${polyglot.home}/lib/ppg.jar" />
    <pathelement path="${polyglot.home}/lib/java_cup.jar" />
    <pathelement path="${polyglot.home}/lib/JFlex.jar" />
  </path>

  <!-- Jif classpath -->
  <path id="jif.classpath">
    <path refid="polyglot.classpath" />
    <pathelement location="${jif.home}/classes" />
    <pathelement location="${jif.home}/lib/jif.jar" />
  </path>

  <!-- Classpath consisting of libraries on which the system depends. -->
  <path id="lib.classpath">
    <fileset dir="${lib}">
        <include name="*.jar" />
        <exclude name="fabric*.jar" />
    </fileset>
  </path>

  <!-- Classpath for building Fabric applications. -->
  <path id="fabric.classpath">
    <pathelement location="${classes}" />
    <pathelement location="${lib}/fabric.jar" />
    <pathelement location="${runtime.classes}" />
    <pathelement location="${lib}/fabric-rt.jar" />
  </path>

  <!-- XXX Remove this -->
  <path id="standard.classpath">
    <pathelement location="${classes}"/>

    <path refid="lib.classpath" />

    <!-- Jif (and Polyglot) -->
    <path refid="jif.classpath" />

    <pathelement path="${java.class.path}" />
  </path>

  <!--
  ____________________________________________________________________________
    Configuration helper targets.
  -->

  <target name="configure-buildstring" depends="configure-version"
      unless="fabric.version.build">
    <tstamp>
      <format property="now" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>
    <property name="fabric.version.build" value="${fabric.version} (${now})" />
  </target>

  <target name="configure-version" unless="fabric.version">
    <property file="${fabric.home}/version.properties" prefix="fabric" />
    <property name="fabric.version" value="${fabric.version.major}.${fabric.version.minor}.${fabric.version.patch}" />
  </target>

  <!--
  ____________________________________________________________________________
    Jar helper targets.
  -->

  <!--
    Common target for creating jar files.

    Parameters:
      file - Destination jar file.
      base - base directory from which all class files will be included.
  -->
  <target name="jar" depends="jar-manifest">
    <jar jarfile="${file}" basedir="${base}" manifest="${tmp.manifest}"
	includes="**/*.class" />
  </target>

  <target name="jar-manifest" depends="configure-buildstring">
    <tempfile property="tmp.manifest" deleteonexit="true" />
    <manifest file="${tmp.manifest}">
      <attribute name="Built-By" value="${user.name}" />
      <attribute name="Implementation-Version" value="${fabric.version}" />
      <attribute name="Built-Date" value="${fabric.version.build}" />
    </manifest>
  </target>
</project>

