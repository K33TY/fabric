<!-- Common definitions. -->

<project name="fabric.common">
  <dirname property="fabric.home" file="${ant.file.fabric.common}" />

  <!-- set the prefix for accessing environment variables -->
  <property environment="env" />

  <property file="${fabric.home}/config.properties" />

  <!-- Polyglot installation location -->
  <!-- If it is not defined in the properties file, use the environment
       variable $POLYGLOT. -->
  <condition property="polyglot.home" value="${env.POLYGLOT}">
    <and>
      <isset property="env.POLYGLOT" />
      <not>
        <isset property="polyglot.home" />
      </not>
    </and>
  </condition>
  <!-- As a last resort, try to use polyglot.jar from distribution -->
  <condition property="polyglot.home" value="${fabric.home}">
    <not><isset property="polyglot.home" /></not>
  </condition>

  <!-- Polyglot configuration file -->
  <property file="${polyglot.home}/config.properties" prefix="polyglot" />

  <!-- Jif installation -->
  <!-- If it is not defined in the properties file, use the environment
       variable $JIF. -->
  <condition property="jif.home" value="${env.JIF}">
    <and>
      <isset property="env.JIF" />
      <not>
        <isset property="jif.home" />
      </not>
    </and>
  </condition>
  <!-- As a last resort, try to use jif.jar from distribution -->
  <condition property="jif.home" value="${fabric.home}">
    <not><isset property="jif.home" /></not>
  </condition>

  <!-- jif configuration file -->
  <property file="${jif.home}/config.properties" prefix="jif" />

  <!-- Java installation -->
  <!-- First  choice: jdk.home in config.properties
       Second choice: jdk.home in ${jif.home}/config.properties
       Third  choice: JAVA_HOME environment variable
  -->
  <condition property="jdk.home" value="${jif.jdk.home}">
    <and>
      <isset property="jif.jdk.home" />
      <not>
        <isset property="jdk.home" />
      </not>
    </and>
  </condition>
  <condition property="jdk.home" value="${env.JAVA_HOME}">
    <and>
      <isset property="env.JAVA_HOME" />
      <not>
        <isset property="jif.jdk.home" />
      </not>
    </and>
  </condition>


  <!-- Directories for class file targets -->
  <property name="classes" location="${fabric.home}/classes"/>
  <property name="runtime.classes" location="${fabric.home}/rt-classes"/>

  <!-- Binaries directory -->
  <property name="bin" location="${fabric.home}/bin"/>

  <!-- Library directory -->
  <property name="lib" location="${fabric.home}/lib"/>

  <!-- fabc executable -->
  <property name="fabc" location="${bin}/fabc" />

  <!-- filc executable -->
  <property name="filc" location="${bin}/filc" />

  <!-- jifc executable -->
  <property name="jifc" location="${jif.home}/bin/jifc"/>

  <!-- jif executable -->
  <property name="jif" location="${jif.home}/bin/jif"/>

  <!-- Debug flag to be passed to fabc and filc. -->
  <property name="debug.flag" value="-g" />

  <!-- Polyglot classpath -->
  <path id="polyglot.classpath">
    <pathelement path="${polyglot.home}/classes" />
    <pathelement path="${polyglot.home}/lib/polyglot.jar" />
    <pathelement path="${polyglot.home}/lib/ppg.jar" />
    <pathelement path="${polyglot.home}/lib/java_cup.jar" />
    <pathelement path="${polyglot.home}/lib/JFlex.jar" />
    <pathelement path="${jdk.home}/lib/tools.jar" />
  </path>

  <!-- Jif classpath -->
  <path id="jif.classpath">
    <path refid="polyglot.classpath" />
    <pathelement location="${jif.home}/classes" />
    <pathelement location="${jif.home}/lib/jif.jar" />
  </path>

  <!-- Classpath consisting of libraries on which the system depends. -->
  <path id="lib.classpath">
    <fileset dir="${lib}">
        <include name="**/*.jar" />
        <exclude name="fabric*.jar" />
    </fileset>
  </path>

  <!-- Classpath for building Fabric applications. -->
  <path id="fabric.classpath">
    <pathelement location="${classes}" />
    <pathelement location="${lib}/fabric.jar" />
    <pathelement location="${runtime.classes}" />
    <pathelement location="${lib}/fabric-rt.jar" />
  </path>
</project>


<!--
vim: ts=2 sw=2 ai et
-->
