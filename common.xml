<!-- Common definitions. -->

<project name="fabric.common">
  <dirname property="fabric.home" file="${ant.file.fabric.common}" />

  <!-- set the prefix for accessing environment variables -->
  <property environment="env" />

  <property name="build.sysclasspath" value="ignore" />

  <property file="${fabric.home}/config.properties" />
  <property file="${fabric.home}/extra.properties" />

  <!-- Polyglot installation location -->
  <!-- If polyglot.home is not defined in the properties file, try to use
       polyglot.jar from the distribution -->
  <condition property="polyglot.home" value="${fabric.home}">
    <not><isset property="polyglot.home" /></not>
  </condition>

  <!-- Polyglot configuration file -->
  <property file="${polyglot.home}/config.properties" prefix="polyglot" />

  <!-- Jif installation -->
  <!-- If jif.home is not defined in the properties file, try to use jif.jar
       from the distribution -->
  <condition property="jif.home" value="${fabric.home}">
    <not><isset property="jif.home" /></not>
  </condition>

  <!-- jif configuration file -->
  <property file="${jif.home}/config.properties" prefix="jif" />

  <!-- Java installation -->
  <!-- First  choice: jdk.home in config.properties
       Second choice: jdk.home in ${jif.home}/config.properties
       Third  choice: JAVA_HOME environment variable
       Fourth choice: output of the BASH command (if successful):
                        readlink -f $(which javac) \
                          | sed '/\/bin\/javac$/{s|/bin/javac$||;q}; q1'
                      (The above sed expression is the same as
                      's|/bin/javac$||', except it returns with exit code 1 if
                      the substitution is unsuccessful.)
       Fifth  choice: Ant's built-in java.home
  -->
  <condition property="jdk.home" value="${jif.jdk.home}">
    <and>
      <isset property="jif.jdk.home" />
      <not>
        <isset property="jdk.home" />
      </not>
    </and>
  </condition>
  <condition property="jdk.home" value="${env.JAVA_HOME}">
    <and>
      <isset property="env.JAVA_HOME" />
      <not>
        <isset property="jdk.home" />
      </not>
    </and>
  </condition>
  <exec executable="bash"
      failifexecutionfails="false"
      outputproperty="jdk.home.detected"
      resultproperty="jdk.home.detect-result">
    <arg value="-c"/>
    <arg value="-o"/> <arg value="pipefail"/>
    <arg value="readlink -f $(which javac) | sed '/\/bin\/javac$/{s|/bin/javac$||;q}; q1'"/>
  </exec>
  <echo message="${jdk.home.detected}"/>
  <echo message="${jdk.home.detect-result}"/>
  <condition property="jdk.home" value="${jdk.home.detected}">
    <and>
      <equals arg1="${jdk.home.detected-result}" arg2="0"/>
      <isset property="jdk.home.detected"/>
      <not>
        <isset property="jdk.home" />
      </not>
    </and>
  </condition>
  <condition property="jdk.home" value="${java.home}">
    <not>
      <isset property="jdk.home" />
    </not>
  </condition>


  <!-- Directories for class file targets -->
  <property name="classes" location="${fabric.home}/classes"/>
  <property name="runtime.classes" location="${fabric.home}/rt-classes"/>

  <!-- Binaries directory -->
  <property name="bin" location="${fabric.home}/bin"/>

  <!-- Library directory -->
  <property name="lib" location="${fabric.home}/lib"/>

  <!-- fabc executable -->
  <property name="fabc" location="${bin}/fabc" />

  <!-- fabc-in-worker executable -->
  <property name="fabc-in-worker" location="${bin}/fabc-in-worker" />

  <!-- jpa2fab executable -->
  <property name="jpa2fab" location="${fabric.home}/tools/jpa2fab/bin/jpa2fab" />

  <!-- filc executable -->
  <property name="filc" location="${bin}/filc" />

  <!-- jifc executable -->
  <property name="jifc" location="${jif.home}/bin/jifc"/>

  <!-- jif executable -->
  <property name="jif" location="${jif.home}/bin/jif"/>

  <!-- Debug flag to be passed to fabc and filc. -->
  <property name="debug.flag" value="-g" />

  <!-- Polyglot classpath -->
  <path id="polyglot.classpath">
    <pathelement path="${polyglot.home}/classes" />
    <pathelement path="${polyglot.home}/lib/polyglot.jar" />
    <pathelement path="${polyglot.home}/lib/ppg.jar" />
    <pathelement path="${polyglot.home}/lib/java_cup.jar" />
    <pathelement path="${polyglot.home}/lib/jflex.jar" />
    <pathelement path="${jdk.home}/lib/tools.jar" />
  </path>

  <!-- Jif classpath -->
  <path id="jif.classpath">
    <path refid="polyglot.classpath" />
    <pathelement location="${jif.home}/classes" />
    <pathelement location="${jif.home}/lib/jif.jar" />
  </path>

  <!-- Classpath consisting of libraries on which the system depends. -->
  <path id="lib.classpath">
    <fileset dir="${lib}">
        <include name="**/*.jar" />
        <exclude name="fabric*.jar" />
    </fileset>
  </path>

  <!-- Classpath for building Fabric applications. -->
  <path id="fabric.classpath">
    <pathelement location="${classes}" />
    <pathelement location="${lib}/fabric.jar" />
    <pathelement location="${runtime.classes}" />
    <pathelement location="${lib}/fabric-rt.jar" />
  </path>

  <!-- Some useful Ant macros for invoking our compilers. -->
  <macrodef name="fabc">
    <attribute
        name="dest"
        description="The output directory."/>
    <element name="extra-args" implicit="true"/>
    <sequential>
      <apply executable="bash"
             parallel="true"
             failonerror="true"
             dest="@{dest}"
             relative="false"
             skipemptyfilesets="true"
             vmlauncher="false">
        <arg value="${fabc}"/>
        <arg line="${debug.flag}"/>
        <arg value="-d"/> <arg value="@{dest}"/>
        <arg value="-e"/>
        <arg value="-no-warnings"/>
        <extra-args/>
        <srcfile/>
        <globmapper from="*.fab" to="*.class"/>
      </apply>
    </sequential>
  </macrodef>

  <macrodef name="fabc-in-worker">
    <attribute
        name="dest"
        description="The output directory."/>
    <attribute
        name="worker"
        description="The name of the worker."/>
    <attribute
        name="app-home"
        description="The home directory of the application."/>
    <element name="extra-args" implicit="true"/>
    <sequential>
      <apply executable="bash"
             parallel="true"
             failonerror="true"
             dest="@{dest}"
             relative="false"
             skipemptyfilesets="true"
             vmlauncher="false">
        <arg value="${fabc-in-worker}"/>
        <arg value="--name"/> <arg value="@{worker}"/>
        <arg value="--app-home"/> <arg value="@{app-home}"/>
        <arg line="${debug.flag}"/>
        <arg value="-d"/> <arg value="@{dest}"/>
        <arg value="-e"/>
        <arg value="-no-warnings"/>
        <extra-args/>
        <srcfile/>
        <globmapper from="*.fab" to="*.class"/>
      </apply>
    </sequential>
  </macrodef>


  <macrodef name="fabsigc">
    <attribute
        name="dest"
        description="The output directory."/>
    <element name="extra-args" implicit="true"/>
    <sequential>
      <fabc dest="@{dest}">
        <arg value="-sig"/>
        <extra-args/>
      </fabc>
    </sequential>
  </macrodef>

  <macrodef name="filc">
    <attribute
        name="dest"
        description="The output directory."/>
    <element name="extra-args" implicit="true"/>
    <sequential>
      <apply executable="bash"
             parallel="true"
             failonerror="true"
             dest="@{dest}"
             relative="false"
             skipemptyfilesets="true"
             vmlauncher="false">
        <arg value="${filc}"/>
        <arg line="${debug.flag}"/>
        <arg value="-d"/> <arg value="@{dest}"/>
        <extra-args/>
        <srcfile/>
        <globmapper from="*.fil" to="*.class"/>
      </apply>
    </sequential>
  </macrodef>

  <macrodef name="filsigc">
    <attribute
        name="dest"
        description="The output directory."/>
    <element name="extra-args" implicit="true"/>
    <sequential>
      <filc dest="@{dest}">
        <arg value="-sig"/>
        <extra-args/>
      </filc>
    </sequential>
  </macrodef>

  <macrodef name="jpa2fab">
    <attribute name="destdir" default="classes"/>
    <element name="extra-args" implicit="true"/>
    <sequential>
      <apply executable="bash"
             parallel="true"
             failonerror="true"
             dest="@{destdir}"
             relative="false"
             skipemptyfilesets="true"
             vmlauncher="false">
        <arg value="${jpa2fab}"/>
        <arg line="${debug.flag}"/>
        <arg value="-d"/> <arg value="@{destdir}"/>
        <arg value="-output-fabil"/>
        <extra-args/>
        <srcfile/>
        <globmapper from="*.java" to="*.fil"/>
      </apply>
    </sequential>
  </macrodef>

</project>


<!--
vim: ts=2 sw=2 ai et
-->
