<project name="diaspora" default="all" basedir=".">
  <description>
    Diaspora build file
  </description>

  <!-- Set global properties for this build -->

  <!-- Source directory -->
  <property name="src" location="${basedir}/src"/>
  <property name="sys-src" location="${basedir}/src/system"/>

  <!-- Directory for class file targets -->
  <property name="classes" location="${basedir}/classes"/>

  <!-- Distribution directory -->
  <property name="dist" location="${basedir}/dist"/>

  <!-- Binaries directory -->
  <property name="bin" location="${basedir}/bin"/>

  <path id="standard.classpath">
    <pathelement location="${classes}"/>
  </path>

  <target name="configure" description="Configures Diaspora"
      unless="configure.up-to-date">
    <echo message="java version is ${java.version}"/>
    <echo message="current directory is ${user.dir}"/>
    <echo message="Java home directory is ${java.home}"/>
    <property name="configure.up-to-date" value="true"/>
  </target>

  <!-- Create appropriate executables in the bin directory -->
  <target name="bin" depends="configure,bin-deps" unless="bin.up-to-date">
    <antcall target="diaspora-bin"/>
  </target>

  <target name="bin-deps">
    <dependset>
      <srcfileset dir="${bin}" includes="diaspora.in"/>
      <targetfileset dir="${bin}" includes="diaspora"/>
    </dependset>
    <condition property="bin.up-to-date">
      <available file="${bin}/diaspora"/>
    </condition>
  </target>

  <target name="defs-deps">
    <condition property="defs.up-to-date">
      <available file="${bin}/defs"/>
    </condition>
  </target> 

  <!-- Creates a file containing common environment variable definitions -->
  <target name="executable-defs" depends="defs-deps" unless="defs.up-to-date">
    <echo message="Creating ${bin}/defs"/>
    <echo file="${bin}/defs" append="no">#!/bin/sh
# DO NOT EDIT - This file was automatically generated.

JAVA='${java.home}/bin/java'
FILE_SEP='${file.separator}'
PATH_SEP='${path.separator}'
TOP='${basedir}'
    </echo>
  </target>

  <target name="diaspora-bin" depends="executable-defs">
    <echo message="Creating ${bin}/diaspora"/>
    <concat destfile="${bin}/diaspora" append="no">
      <filelist dir="${bin}" files="defs"/>
    </concat>
    <echo file="${bin}/diaspora" append="yes">
ext=""

</echo>
    <concat destfile="${bin}/diaspora" append="yes">
      <filelist dir="${bin}" files="diaspora.in"/>
    </concat>

    <chmod perm="+x" file="${bin}/diaspora"/>

    <delete file="${bin}/defs"/>
  </target>

  <!-- Initialise the build -->
  <target name="init" depends="configure">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${classes}"/>
  </target>

  <!-- Compiles Diaspora -->
  <target name="all"
    depends="bin,diaspora-system,tests"
    description="Builds Diaspora"/>

  <!-- Compiles Diaspora -->
  <target name="diaspora-system" depends="core,client" description="Builds Diaspora"/>

  <target name="clean" description="Cleans up the directory tree: deletes the distribution directory and the classes directories">
    <!-- Delete the ${classes} and ${dist} directory trees -->
    <delete dir="${classes}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="clobber" depends="clean"
      description="Cleans up the directory tree and deletes generated files">
    <delete>
      <fileset dir="${bin}">
	<include name="diaspora"/>
	<include name="defs"/>
      </fileset>
    </delete>
  </target>

  <!-- Compiles the Diaspora core -->
  <target name="core" depends="init">
    <javac srcdir="${sys-src}" destdir="${classes}" debug="on"
	includes="diaspora/core/**,diaspora/common/**,diaspora/messages/**">
      <classpath refid="standard.classpath"/>
    </javac>
  </target>

  <!-- Compiles the Diaspora client API -->
  <target name="client" depends="init">
    <javac srcdir="${sys-src}" destdir="${classes}" debug="on"
	includes="diaspora/client/**,diaspora/common/**,diaspora/messages/**">
      <classpath refid="standard.classpath"/>
    </javac>
  </target>

  <!-- Compiles the Diaspora test programs -->
  <target name="tests" depends="init,diaspora-system">
    <javac srcdir="${src}" destdir="${classes}" debug="on" includes="tests/**">
      <classpath refid="standard.classpath"/>
    </javac>
  </target>

</project>

