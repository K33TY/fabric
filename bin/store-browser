#!/bin/bash

# Wrapper script for the Fabric GUI store browser 

source "$(dirname $0)/defs"

# Default app home is Fabric root.
APPHOME="$(dirname $0)/.."

function usage() {
  cat >&2 <<EOF
Usage: $(basename "$0") [options] [worker] [store] [onum]

  Launches a GUI for browsing a store's object database.

    worker - name of the worker to use for browsing
     store - name of the store to be browsed
      onum - identifies the root of the object graph to be browsed

Options:
  -cp classpath
      path for classes that will be browsed.

  --app-home directory
      the base directory for the store and worker's configuration and state.
      Default: ${TOP}

  --help
      prints this message.
EOF
  exit 1
}

while true; do
  case "$1" in
    "") break;;
    -v)
      verbose="1"
      shift
      ;;
    -j)
      vmargs="${vmargs} '$2'"
      shift 2
      ;;
    -cp|-classpath|--jvm-cp)
      classpath="${classpath}:$2"
      shift 2
      ;;
    --app-home)
      APPHOME=$2
      shift 2
      ;;
    -h|--help)
      usage
      ;;
    *)
      args="${args} '$1'"
      shift
      ;;
  esac
done

# Export location of config, etc, and var.
export FABRIC_HOME="${APPHOME}"

# Dependencies.
# Jar files should always appear *after* their corresponding class directories.
LIBCP="${TOP}/tools/storebrowser/classes"
LIBCP="${LIBCP}:${TOP}/lib/fabric-tools.jar"

classpath="${FABRIC_WORKER_CP}:${LIBCP}:${classpath}"

command="\"${JAVA}\" ${vmargs} -classpath \"$(fixpath ${classpath})\" fabric.tools.storebrowser.StoreBrowser ${args}"

if [ -n "${verbose}" ]
then
  echo "${command}"
fi

eval "${command}"
