#!/usr/bin/perl

use File::Path qw(remove_tree);
use IPC::Open3;

# Counts and categorizes lines of code in the Fabric project that have changed
# between trunk and a given branch.

if (@ARGV != 1) {
  # Print usage info.
  my $progname = `basename $0`; chomp $progname;
  print STDERR "Usage: $progname <branch_name>";
  exit 1;
}

my $branch = $ARGV[0];
my $width=40;

if ($ENV{'FABRIC_HOME'} ne '') {
  chdir($ENV{'FABRIC_HOME'});
} else {
  my $bindir = `dirname $0` ; chomp $bindir;
  my $fabric = $bindir . '/..';
  if (!chdir($fabric)) {
    print STDERR "error\n";
  }
}

if (! -d 'src' || ! -f 'bin/loc-diff') {
  die 'Run from the top directory of Fabric';
}

# Make sure we're in a clean FABRIC/tmp.
remove_tree('tmp', {safe => 0});
mkdir('tmp');
if (!chdir('tmp')) {
  die 'error changing to FABRIC/tmp directory';
}

# Check out branch.
print 'Exporting branch "', $branch, '" from svn...', "\n";
open(NULL, '>', File::Spec->devnull);
my $pid = open3("<&NULL", ">&NULL", ">&STDOUT",
  'svn', 'export',
  'https://forge.cornell.edu/svn/repos/fabric/branches/' . $branch,
  'branch');
waitpid($pid, 0);
if ($? != 0) {
  die 'Error exporting branch "', $branch, '" from svn';
}

# Check out trunk.
print 'Exporting trunk from svn...', "\n";
open(NULL, '>', File::Spec->devnull);
$pid = open3("<&NULL", ">&NULL", ">&STDOUT",
  'svn', 'export',
  'https://forge.cornell.edu/svn/repos/fabric/trunk');
waitpid($pid, 0);
if ($? != 0) {
  die 'Error exporting trunk from svn';
}

# Normalize sources.
print 'Normalizing source files...', "\n";
print `find \\( -name \\*.java -o -name \\*.fab -o -name \\*.fil -o -name \\*.jif \\) -print0 | xargs -0 ../tools/code-normalizer/bin/normalize-code`;

# Do the diff.
print 'Diffing...', "\n";
print `diff -urN --suppress-common-lines branch trunk|diffstat -b -m -s`;

