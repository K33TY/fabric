#!/bin/bash
# tests directory (contains etc/ for test configs)
APP_HOME="$(dirname $0)/.."
# Fabric root
FABRIC="${APP_HOME}/.."
PATH="${PATH}:${FABRIC}/bin:${FABRIC}/tests/bin"
export FABRIC_HOME="${APP_HOME}"

name="tests"
keep=false

cleanup()
# shutdown nodes
{
  for s in ${stores//,/ }; do
    echo "Shutting down $s"
    screen -S $s -X quit
  done

  for w in ${workers//,/ }; do
    echo "Shutting down $w"
    screen -S $w -X quit
  done

  exit $?
}

control_c()
# run if user hits control-c
{
  echo -en "\n*** Ouch! Exiting ***\n"
  cleanup
  exit $?
}


while true; do
  case "$1" in
    "")
      break
      ;;
    --name)
      name="$2"
      shift 2
      ;;
    --start-workers)
      workers=$2
      shift 2
      ;;
    --start-stores)
      stores=$2
      shift 2
      ;;
    --keep-nodes)
      keep=true
      shift 1
      ;;
    *)
      args="${args} '$1'"
      shift
      ;;
  esac
done
# trap keyboard interrupt (control-c)
#trap control_c SIGINT

for s in ${stores//,/ }; do
  echo "Starting store $s"
  screen -d -m -S $s -c /dev/null
  screenbug $s
  screen -S $s -X screen -L 0 start-store --name $s
done

if [ -n "${stores}" ]; then
  echo "Waiting for stores to start up"
  for s in {0..5}; do
    printf "."
    sleep 1	
  done
  echo "done"
fi

for w in ${workers//,/ }; do
  echo "Starting worker $w"
  screen -d -m -S $w -c /dev/null
  screenbug $w
  screen -S $w -X screen -L 0 start-worker --name $w
done

fabth ${args}

if [[ "${keep}" == "false" ]]; then
  cleanup
fi

# vim: ts=2 sw=2 ai et
