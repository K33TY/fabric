package system;

import fabric.worker.Store;
import fabric.worker.Worker;

public class ThreadTest03 {
  int x = 0;

  public static void main(String[] args) throws InterruptedException {
    Store store = Worker.getWorker().getLocalStore();
    T thread;
    ThreadTest03 obj;

    atomic {
      obj = new ThreadTest03@store();
      thread = new T(obj);
    }

    thread.start();

    atomic {
      // Wait for the thread to start reading.
      sleep(1);

      // Attempt to write.
      obj.x = 1;
    }
  }

  static class T extends Thread {
    final ThreadTest03 obj;

    T(ThreadTest03 obj) {
      this.obj = obj;
    }

    public void run() {
      try {
	atomic {
	  // Start reading.
	  int x = obj.x;

	  atomic {
	    while (true) {
	      ThreadTest03.sleep(1);
	    }
	  }
	}
      } catch (Exception e) {
	e.printStackTrace();
      }
    }
  }

  public static void sleep(int secs) throws InterruptedException {
    Thread.sleep(1000*secs);
  }
}

