import bank.*;
import carrier.*;
import merchant.*;
import fabric.client.AbortException;
import fabric.client.Core;
import fabric.client.Client;
import fabric.util.Map;

public class Main {
  public static void main(String[] args) throws AbortException {
    if (args.length != 1 || !args[0].equals("init") && !args[0].equals("run")) {
      System.out.println("Usage: Main [init|run]");
      return;
    }
    
    Client client = fabric.client.Client.getClient();

    Core bankCore = client.getCore("core0");
    Core carrCore = client.getCore("core1");
    Map bankRoot = (Map) bankCore.getRoot();
    Map carrRoot = (Map) carrCore.getRoot();

    Bank bank = null;
    Carrier carr = null;
    if (args[0].equals("init")) {
      atomic {
        bank = new Bank@bankCore(bankCore);
        carr = new Carrier@carrCore(carrCore);

        bankRoot.put("Bank", bank);
        carrRoot.put("Carrier",carr);
      }
	  System.out.println("Created instances of bank, carrier.");
	  atomic {
		bank.createAccount("user0");
		bank.createAccount("nwa");
	  }
	  atomic {
	    carr.setAccountName("nwa");
	  }

	  System.out.println("Initialized bank with accounts user0, nwa. Done.");
      return;
    }

    bank = (Bank) bankRoot.get("Bank"); 
    carr = (Carrier) carrRoot.get("Carrier");
	
	//Core localCore = client.getLocalCore();
	Merchant mrch = new Merchant(bank,carr);
	mrch.confirmTransaction();
  }
}
