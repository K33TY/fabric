/**
 * This class allows heterogeneous users to be stored in a homogeneous list.
 */
public class AccountWrapper[principal bank] implements JifObject[{bank->;bank<-}] {
  public  final principal           {bank->;bank<-} user;
  public  final Account[user, bank] {bank->;bank<-} account;

  public AccountWrapper(principal                {bank->;bank<-} userFormal,
                        Account[userFormal, bank]{bank->;bank<-} accountFormal) {
    this.user    = userFormal;
    this.account = accountFormal;
  }

  //////////////////////////////////////////////////////////////////////////////
  // interface methods                                                        //
  //////////////////////////////////////////////////////////////////////////////

  public int{bank->;bank<-} hashCode() {
    return 0;
  }

  public String{bank->;bank<-} toString() {
    return "Account";
  }

  public boolean equals(IDComparable[{bank->;bank<-}] obj) {
    if (this == obj)
    return true;
    return false;
  }

  public boolean equals(label lbl, IDComparable[{*lbl}] obj){
    if (this == obj)
    return true;
    return false; 
  }
}

/*
** vim: ts=2 sw=2 et cindent cino=\:0
*/
