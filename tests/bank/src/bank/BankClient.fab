package bank;

import fabric.client.Core;

public class BankClient[principal cp] {
	public final label{cp->;cp<-} bot = new label {⊥→⊥;⊤←⊤};
	//private final BankPrincipal[{cp->;cp<-}]{cp->;cp<-} bcp;

	public BankClient () {
		//this.bcp = bcp;
	}

	public int{cp->;cp<-} getBalance() {
		//XXX Should I really be ignoring exceptions here?
		try {
			return (BankPrincipal) cp.getBalance();
		} catch	(NullPointerException e) { }
		return 0;
	}

	public void init() {
	}

//        public boolean{L} debitFunds(int uid, int value) {
//                return true;
//        }

//        public boolean{L} sufficientFunds(int uid, int value) {
//                return true;
//        }


}
