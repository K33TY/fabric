package bank;

public class BankMain authority(BankEP) {
	//trusted merchant's principal
	private principal {BankEP:;BankEP←} brokerPcp;

	//bank customers' principals
	private BankPrincipal[{BankEP:;BankEP←}]{BankEP:;BankEP←} userPcp;

	private final Core {BankEP:;BankEP←} nodeLocation;

//	public static void main{*←} (String{*←}[]{*←} args) {
//		BankMain bank_ = null;
//		atomic {
//			bank_ = new BankMain();
//		}

////		m_.begin();
//	}


	public BankMain{BankEP:;BankEP←} (Core {BankEP:;BankEP←} location) {
		this.nodeLocation = location;
	}

	public void login(String username, String password) {
		try {
			if(userPcp.authenticate(username, password)) {
				return;
			}
		} catch (NullPointerException e) {
		}
	}
	
	public void createUser{BankEP:;BankEP←} () {
		userPcp = new BankPrincipal ("user", "f", "l", "pwd");
	}

	public void setBroker {BankEP:;BankEP←} (principal {BankEP:;BankEP←} M) {
		brokerPcp = M;		
	}

	public static BankClient[BankEP]{cp:;cp←} requestClient{cp:;cp←} (principal cp)
	where authority(BankEP), caller(cp), endorse({cp:;cp←; BankEP←}) {
		
		return new BankClient[BankEP]();
	}
}
