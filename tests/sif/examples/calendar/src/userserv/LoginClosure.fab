package userserv;

import sif.servlet.SessionPrincipal;

/**
 * P is the User[L] principal that will have the session principal added to its superiors.
 */
public class LoginClosure[principal servP, principal P] implements Closure[P, {P→}]  {
    private final SessionPrincipal[{P→}]{P→} sessionPrincipal;
    
    public LoginClosure(SessionPrincipal[{P→}]{P→} sessionPrincipal) {
        this.sessionPrincipal = sessionPrincipal;
    }

    // DOWNGRADE REASON: Things need to be trusted by P!: in order to
    // delegate P's authority. However, since this stuff is coming from the 
    // session principal (which does not yet act for P), it is untrusted by P.
    // The auto-endorse is OK, for the same reason that this closure is a source 
    // of P's authority.
    public final java.lang.Object invoke{P:}() where caller(P), endorse({P:;P!:}) {
        // add the session principal as a delegate to the principal P.
        try {
            final User[servP,{P:;P!:}] u = (User[servP,{P:;P!:}])(Principal)P;
            if (u != null) u.addDelegatesTo(endorse(sessionPrincipal, {P:} to {P:;P!:}));
        }
        catch (ClassCastException imposs) { }
        return null;
    }
}
