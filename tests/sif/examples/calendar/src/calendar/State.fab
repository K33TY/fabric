package calendar;

import userserv.*;
import sif.servlet.SessionState;
import jif.util.*;

class State[covariant label T] {
    State(User[CalServEP]{T} currentUser, 
          Date[{currentUser←}]{T} displayDate, 
          int{T} displayKind, 
          User[CalServEP]{T} displayUser) {
        this.currentUser = currentUser;
        this.displayDate = displayDate;
        this.displayKind = displayKind;
        this.displayUser = displayUser;
    }
    final User[CalServEP, T]{T} currentUser;
    final jif.util.Date[{currentUser←}]{T} displayDate;
    final int{T} displayKind;
    final User[CalServEP, T]{T} displayUser;
    
    State[lbl] changeDisplayUser{*lbl}(label{*lbl} lbl, User[CalServEP]{*lbl} displayUser)
    where T <= lbl {
        return new State[lbl](this.currentUser, this.displayDate, this.displayKind, displayUser);
    }
    
    State[lbl] changeDisplayDate{*lbl}(label{*lbl} lbl, Date[{currentUser←}]{*lbl} displayDate, int{*lbl} displayKind)
    where T <= lbl {
        return new State[lbl](this.currentUser, displayDate, displayKind, this.displayUser);
    }
    State[lbl] changeDisplayDate{*lbl}(label{*lbl} lbl, Date[{currentUser←}]{*lbl} displayDate)
    where T <= lbl {
        return new State[lbl](this.currentUser, displayDate, this.displayKind, this.displayUser);
    }
    
}

