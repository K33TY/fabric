package login;

import javax.servlet.ServletException;

import sif.servlet.*;
import sif.html.*;

public class LogoffAction[principal servP] extends AbstractAction[servP] {
    public LogoffAction(Servlet[servP]{this} servlet) {
        super();
        initFields("logoff",servlet);
    }

    public final void invoke{*lbl}(label{*lbl} lbl, Request[servP]{*lbl} req) 
    throws (ServletException{*lbl;*:req.session;req.session!:})
        where caller(req.session),
        lbl <= {*:req.session} {

        Servlet[servP] servlet = getServlet();
        SessionState state = req.getSessionState(lbl);
        if (req == null || servlet == null || state == null) throw new ServletException("Error processing request");

        atomic {
            Action[servP] a = (Action[servP])servlet.findStartAction(req, servlet.defaultActionName(req));
            if (!ensureLoggedIn(lbl, req, a)) return;

            final label newLbl = new label {*lbl; req.session!:};
            SessionState ss = req.getSessionState(lbl);
            if (!(ss instanceof AuthSessState[servP, lbl])) throw new ServletException("Incorrect session state");
            final AuthSessState[servP, lbl] css = (SessState[servP, lbl])ss;

            if (req.session equiv css.sessionPrincipal) {
                final principal{req.session!:;*lbl} currentUser = state.currentUser();
                if (currentUser != null && 
                        req.session actsfor currentUser && 
                        lbl <= new label {currentUser→;currentUser←}) {
                    currentUser.removeDelegatesTo(req.session);
                }
                
                // invalidate the session.
                req.invalidateSession();
                
                // produce the goodbye page.
                String title = "Goodbye";
                Paragraph[lbl, lbl] para = new Paragraph[lbl, lbl]("You have succesfully logged off.");
                NodeList[lbl, lbl] content = new NodeList[lbl, lbl](lbl, lbl, para); 
                content = content==null?null:content.append(lbl, lbl, new Hyperlink[servP, lbl, lbl](req.contextURL(), "Login again"));
                content = new NodeList[lbl, lbl](lbl, lbl, createBanner(lbl, title), createBody(lbl, lbl, content));
                servlet.createPage(req, title, lbl, lbl, content);        
            }
            else {
                throw new ServletException("req.session not equivalent to state.sessionPrincipal"); 
            }
        }
    }
}
