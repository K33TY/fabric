<project name="sif-config" basedir=".">
	<description>
    SIF Ant build file for configuration properties.
    Do not edit this file; set properties using config.properties.
  </description>


	<dirname property="sif-config.basedir" file="${ant.file.sif-config}" />
	<property name="fabric.home" value="${sif-config.basedir}/../.." />

	<!-- ****************************************
        Configuration properties.
        Load them from config.properties, and then use defaults.
       ****************************************  -->
	<property file="${fabric.home}/config.properties" />

	<!-- override fabric.home for folks who still have it defined in config.properties. -->
	<property name="fabric.home" value="${sif-config.basedir}/../.." />

	<!-- set the prefix for accessing environment variables -->
	<property environment="env" />

	<!-- Polyglot installation -->
	<!-- If it is not defined in the properties file, use the environment variable $JIF. -->
	<condition property="polyglot.home" value="${env.POLYGLOT}">
		<and>
			<isset property="env.POLYGLOT" />
			<not>
				<isset property="POLYGLOT.home" />
			</not>
		</and>
	</condition>
	
	
	<!-- Jif installation -->
	<!-- If it is not defined in the properties file, use the environment variable $JIF. -->
	<condition property="jif.home" value="${env.JIF}">
		<and>
			<isset property="env.JIF" />
			<not>
				<isset property="jif.home" />
			</not>
		</and>
	</condition>

	<!-- Fabric installation -->
	<!-- If it is not defined in the properties file, use the environment variable $FABRIC. -->
	<condition property="fabric.home" value="fabric.home">
		<and>
			<isset property="env.FABRIC" />
			<not>
				<isset property="fabric.home" />
			</not>
		</and>
	</condition>


	<!-- Tomcat installation -->
	<!-- If it is not defined in the properties file, use the environment variable $CATALINA_HOME. -->
	<condition property="catalina.home" value="${env.CATALINA_HOME}">
		<and>
			<isset property="env.CATALINA_HOME" />
			<not>
				<isset property="catalina.home" />
			</not>
		</and>
	</condition>


	<!-- directory for class file targets -->
	<property name="sif.classes" location="${sif-config.basedir}/classes" />

	<!-- directory for shared libraries -->
	<property name="sif.lib" location="${fabric.home}/lib" />

	<!-- directory for shared libraries -->
	<property name="sif.sig-classes" location="${sif-config.basedir}/sig-classes" />

	<!-- the standard classpath -->
	<path id="standard.classpath">
		<fileset dir="${sif.lib}">
			<include name="*.jar" />
			<exclude name="*sig.jar" />
		</fileset>
		<fileset dir="${fabric.home}/lib">
			<include name="*.jar" />
			<exclude name="*sig.jar" />
		</fileset>
		<pathelement location="${sif.classes}" />
		<pathelement location="${fabric.home}/rt-classes" />
		<pathelement location="${fabric.home}/classes" />		
		<pathelement location="${jif.home}/classes" />
		<pathelement location="${jif.home}/lib/jif.jar" />
		<pathelement path="${java.class.path}" />
	</path>


	<!-- ****************************************
       Configuration targets
       ****************************************  -->
	<target name="configure" description="Configures SIF" depends="set-vars,check-classpath" unless="configure.up-to-date">
		<echo message="Java version is ${java.version}" />
		<echo message="Current directory is ${user.dir}" />
		<echo message="Java home directory is ${java.home}" />
		<echo message="Jif installation directory is ${jif.home}" />
		<echo message="Tomcat installation directory is ${catalina.home}" />
		<property name="configure.up-to-date" value="true" />
	</target>

	<target name="configure-install" depends="set-vars" description="Configures SIF">
		<echo message="Java version is ${java.version}" />
		<echo message="Current directory is ${user.dir}" />
		<echo message="Java home directory is ${java.home}" />
		<echo message="Jif installation directory is ${jif.home}" />
		<echo message="Tomcat installation directory is ${catalina.home}" />
		<property name="configure.up-to-date" value="true" />
	</target>

	<target name="check-classpath" description="Check the classpath has the appropriate directories/jars">
		<available classname="javax.servlet.Servlet" classpathref="standard.classpath" property="cp_existence.j2ee" />

		<fail unless="cp_existence.j2ee" message="The J2EE servlet API classes must be on the class path. Try adding servlet-api.jar to the lib directory, or to the class path." />
		<fail unless="fabric.home.defined" message="The Jif installation directory is unknown. Please either edit config.properties, or set the envirnoment variable JIF to the Jif installation directory." />
		<fail unless="fabc.available" message="The fabc executable was not found at location ${fabric.home}/bin/fabc." />
		<fail unless="filc.available" message="The filc executable was not found at location ${fabric.home}/bin/filc." />		
	</target>

	<target name="set-vars">
		<condition property="env.JAVA_HOME.defined">
			<isset property="env.JAVA_HOME" />
		</condition>
		<condition property="fabric.home.defined">
			<isset property="fabric.home" />
		</condition>
		<condition property="catalina.home.defined">
			<isset property="catalina.home" />
		</condition>
		<available file="${fabric.home}/bin/fabc" property="fabc.available" />
		<available file="${fabric.home}/bin/filc" property="filc.available" />
	</target>

</project>

