package mapserv;

import java.io.PrintStream;

/**
 * A simple image class.  The image is indexed by floating point numbers, and
 * stores its own boundary... puts and gets are done relative to the boundary.
 */
public class Image {
  /* coordinates of map */
  public final float xmin;
  public final float ymin;
  public final float xmax;
  public final float ymax;

  /* packed data */
  private final int    width;
  private final int    height;
  private final char[] data;

  /**
   * Create a new image with the given boundary and data.
   * @throws ArrayIndexOutOfBoundsException
   *         if the given width and height do not match the size of the data.
   * @throws NullPointerException
   *         if data is null
   */
  public Image(float xmin, float xmax,
               float ymin, float ymax,
               int width, int height, char[] data) throws ArrayIndexOutOfBoundsException, NullPointerException {

    if (width * height != data.length)
      throw new ArrayIndexOutOfBoundsException();

    this.xmin = xmin;
    this.ymin = ymin;

    this.xmax = xmax;
    this.ymax = ymax;

    this.width  = width;
    this.height = height;
    this.data   = data;
  }

  public char getAt(float x, float y) throws ArrayIndexOutOfBoundsException {
    return data[index(x,y)];
  }

  public void setAt(float x, float y, char value) throws ArrayIndexOutOfBoundsException {
    data[index(x,y)] = value;
  }

  public void print(label l, PrintStream[{*l}] out) {
    //TODO
  }

  private int index(float x, float y) {
    int xoff = (int) (width  * (x - xmin)/(xmax - xmin));
    int yoff = (int) (height * (y - ymin)/(ymax - ymin));

    return yoff * width + xoff;
  }
}


/*
** vim: ts=2 sw=2 et cindent cino=\:0 syntax=java
*/
