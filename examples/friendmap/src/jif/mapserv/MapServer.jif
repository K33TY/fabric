package mapserv;

import util.AssertionFailedError;
import util.Delegator;

/**
 * A very simple map service: given a request for a region, it returns a 10x10
 * image containing the background value, scaled to the requested region.
 */
public class MapServer extends Delegator {

  private final char {this←} background;

  /**
   * Create a new map server, with the given background character.
   */
  public
  MapServer {this}
  (
    String{this} name,
    Principal{owner←} owner,
    char{owner←} background
  )
  where  authority(this)
  {
    // these endorsements are safe, because owner ≽ this,
    // and thus {owner←} ⊑ {this←}
    // we just can't convince the compiler of this fact.

    this.background = endorse(background, {owner←} to {this←});
    super(name, owner);
  }

  /**
   * create a new map with the given bounds, containing the background character.
   *
   * @throws NullPointerException
   *     if boundary is null.
   */
  public
  MapImage[lbl]
  getMap {*lbl}
  (
    label {*lbl} lbl,
    Box   {*lbl} boundary
  )
  :{*lbl}
  throws NullPointerException
  where
    {this←} <= lbl
  {
    final char{*lbl}[]{*lbl} data = new char[100];
    for (int i = 0; i < data.length; i++)
      data[i] = background;

    try {
      return new MapImage[lbl](boundary, 10, 10, data);
    } catch (final ArrayIndexOutOfBoundsException e) {
      throw new AssertionFailedError("10 * 10 = 100");
    }
  }
}



/*
** vim: ts=2 sw=2 et cindent cino=\:0 syntax=java
*/

