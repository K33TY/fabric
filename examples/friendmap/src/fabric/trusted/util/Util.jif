package util;

import java.io.PrintStream;
import jif.runtime.Runtime;

public class Util {

  /**
   * Copy the contents of an array into another array with the given labels.
   */
  public static
  char{*l}[]{*m}
  copyArray {*l; *m}
  (
    final char{*n}[]{*o} data,
    label l,
    label m,
    label n,
    label o,
    Store s
  )
  :{*o}
  throws
    NullPointerException
  where
    n <= l,
    o <= m,
    m <= l
  {
    final char{*l}[]{*m} result = new char[data.length];

    try {

      for (int i = 0; i < data.length; i++)
        result[i] = data[i];

    } catch (final ArrayIndexOutOfBoundsException e) {
      throw new AssertionFailedError("result and data have the same length.");
    }

    return result;
  }

  // TODO: replace with worker$
  public static final principal user = null;

  public static
  PrintStream[lbl] {user←;user→}
  stdout
  (
    label lbl
  )
  where
    lbl <= {user→; _←_}
  {
    Runtime[user] runtime;
    try { runtime = Runtime[user].getRuntime(); }
    catch (final SecurityException e) { throw new AssertionFailedError("Runtime[user()].getRuntime() should not fail."); }

    PrintStream[lbl] result;
    try { result  = runtime.stdout(lbl); }
    catch (final SecurityException    e) { throw new AssertionFailedError("runtime[user].stdout(lbl) should not fail if label ⊑ {user←}."); }
    catch (final NullPointerException e) { throw new AssertionFailedError("Runtime.getRuntime() should return a non-null value"); }

    return result;
  }
}


/*
** vim: ts=2 sw=2 et cindent cino=\:0 syntax=java
*/
