package mapserv;

/**
 * Represents a Box in the x,y plane.  A point (x,y) is contained in the box if
 * x ∈ [xmin, xmax) and y ∈ [ymin, ymax).
 */
public class Box[label A]
where provider <= A
{
  //////////////////////////////////////////////////////////////////////////////
  // public fields                                                            //
  //////////////////////////////////////////////////////////////////////////////

  public final float{A}@{A} xmin, ymin;
  public final float{A}@{A} xmax, ymax;

  //////////////////////////////////////////////////////////////////////////////
  // public methods                                                           //
  //////////////////////////////////////////////////////////////////////////////

  /**
   * Create a new box
   */
  public Box {A}
  (
    float {A} xmin,
    float {A} ymin,
    float {A} xmax,
    float {A} ymax
  )
  {
    this.xmin = xmin;
    this.ymin = ymin;

    this.xmax = xmax;
    this.ymax = ymax;
  }

  /**
   * Return true if this box contains (x,y).
   */
  public boolean{A} contains{A}(float{A} x, float{A} y) {
    return xmin < x && x < xmax
        && ymin < y && y < ymax;
  }

  /**
   * Expand the bounding box so that it contains the given point.
   */
  public
  Box[A] {A} 
  expand{A}
  (
    float {A} x, float {A} y, Store {A} s
  )
  where
    A <= {⊤→s}, provider <= {⊤→s},
    {⊤←s} <= A, {⊤←s} <= provider 
  {
    return new Box[A]@s(
        min(this.xmin, x - 2), min(this.ymin, y - 2),
        max(this.xmax, x + 2), max(this.ymax, y + 2));
  }

  /**
   * Return a box-local x-coordinate for the given global x-coordinate.
   * If x is within the x boundaries of the box, then the result will be
   * between 0 and 1.
   */
  public float{A} scale_x{A}(float{A} x) {
    return (x - xmin) / (xmax - xmin);
  }


  /**
   * Return a box-local y-coordinate for the given global y-coordinate.
   * If y is within the y boundaries of the box, then the result will be
   * between 0 and 1.
   */
  public float{A} scale_y{A}(float{A} y) {
    return (y - ymin) / (ymax - ymin);
  }


  /**
   * Create a deep copy of this on store s with label l.
   */
  public
  Box[l] 
  copy {A}
  (
    label l,
    Store s
  )
  where
    {s←} <= l,
    l <= {s→},
    A <= l,
    provider <= l,
    l <= {⊤→s},
    {⊤←s} <= l
  {
    return new Box[l]@s(this.xmin, this.ymin, this.xmax, this.ymax);
  }

  //////////////////////////////////////////////////////////////////////////////
  // private helper methods                                                   //
  //////////////////////////////////////////////////////////////////////////////

  private static float min (float a, float b) {
    if (a < b)
      return a;
    else
      return b;
  }

  private static float max (float a, float b) {
    if (a > b)
      return a;
    else
      return b;
  }
}

/*
** vim: ts=2 sw=2 et cindent cino=\:0 syntax=java
*/
