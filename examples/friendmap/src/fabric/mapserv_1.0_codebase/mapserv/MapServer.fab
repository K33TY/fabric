package mapserv;

import util.AssertionFailedError;
import util.Delegator;

/**
 * A very simple map service: given a request for a region, it returns a 10x10
 * image containing the background value, scaled to the requested region.
 */
public class MapServer
extends Delegator 
where
  MapImage.provider <= provider, provider <= MapImage.provider,
       Box.provider <= provider, provider <=      Box.provider
{

  private final char {this}@{this→} background;
  final public Store{this}@{this→} store;


  /**
   * Create a new map server, with the given background character.
   */
  public
  MapServer {this}
  (
    String    {this} name,
    Principal {this} owner,
    char      {this} background,
    Store     {this} store
  )
  where
    provider <= {this}
  {
    this.background = background;
    this.store = store;
    super(name, owner);
  }

  /**
   * create a new map with the given bounds, containing the background character.
   *
   * @throws NullPointerException
   *     if boundary is null.
   */
  public
  MapImage[lbl]
  getMap {*lbl}
  (
    label {*lbl} lbl,
    Box[lbl] {*lbl} boundary
  )
  :{*lbl}
  throws NullPointerException
  where
    {this←} <= lbl, provider <= {*lbl},
    provider <= {⊤→store},
    lbl <= {⊤→store},
    {⊤←store} <= lbl
  {
    final char{*lbl}[]{*lbl} data = new char[100]@store;
    for (int i = 0; i < data.length; i++)
      data[i] = background;

    try {
      return new MapImage[lbl]@store(boundary, 10, 10, data);
    } catch (final ArrayIndexOutOfBoundsException e) {
      throw new AssertionFailedError("10 * 10 = 100");
    }
  }
}



/*
** vim: ts=2 sw=2 et cindent cino=\:0 syntax=java
*/

