/**
 * Copyright (C) 2010-2013 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package friendmap;

import mapserv.MapServer;
import friendmap.FriendMap;
import util.AssertionFailedError;

public class Init
where
  provider <= {*←},

  util.Group.provider         <= {*←},
  util.GroupIterator.provider <= {*←},

  FriendMap.provider <= {_→},

  mapserv.MapServer.provider <= mapserv.Box.provider,           mapserv.Box.provider <= mapserv.MapServer.provider,
  mapserv.MapServer.provider <= mapserv.MapImage.provider, mapserv.MapImage.provider <= mapserv.MapServer.provider
{
  public static void main {*←} (String[] args) {
    atomic {
      final Store     fmStore = worker$.getStore("friendmap");
      final Store     store   = worker$.getStore("snapp");

      final MapServer mapserver = (MapServer) store.getRoot().get("mapserv");

      final FriendMap[{*→fmStore}] app = new FriendMap[{*→fmStore}]{}@fmStore (mapserver);

      store.getRoot().put("friendmap", app);
    }
  }
}



/*
** vim: ts=2 sw=2 et cindent cino=\:0 syntax=java
*/

