package snapp;

import util.Delegator;
import util.AssertionFailedError;

/**
 * An instance of Snapp corresponds to an instance of the Snapp social network.
 */
public class Snapp extends Delegator 
  where provider <= User.provider, User.provider <= provider
{

  /**
   * Create a new Snapp, operated by owner.
   */
  public
  Snapp {this}
  (
    String    {this} name,
    principal {this} owner
  )
  where
    provider <= {this}
  {
    super(name, owner);
  }

  // TODO: document/fix labels
  public
  User       {this; *<-owner; *provider} // 
  createUser
  {            // side effects:
    {this}     //
    {*<-owner} //
  }
  (
    String    {this} name,
    principal {this} owner
  )
  where
    provider <= {this}
  {
      // Note: this should always be equal to this.store; it is only here so that
      // we can explicitly annotate object creations (since the checks for implicit
      // store parameters are not implemented in the compiler).
      final Store store = $getStore();
      try { return new User@store(name, owner, this, store); }
      catch (final NullPointerException e) { throw new AssertionFailedError("UserV1 constructor succeeds unless network is null"); }
  }
}

/*
** vim: ts=2 sw=2 et cindent cino=\:0 syntax=java
*/
