<project name="friendmap" default="build-all" basedir=".">
  <description>
    FriendMap build file
  </description>

  <!--
  ****************************************************************************
    Global properties for this build.
  ****************************************************************************
  -->

  <import file="../../common.xml" />

  <dirname property="home" file="${ant.file.friendmap}" />

  <target name="build-all" depends="build-local, build-jif"/>
  <target name="all"       depends="build-local"/>


  <!--
  ****************************************************************************
    Targets for cleaning up the directory tree.
  ****************************************************************************
  -->

  <target name="clean" description="Removes generated files">
    <delete dir="${home}/classes"/>
  </target>

  <target name="clobber" depends="clean"
          description="Removes generated files and state of stores">
    <delete dir="${home}/var"/>
  </target>

  <!--
  ****************************************************************************
    Jif compilation targets.
  ****************************************************************************
  -->

  <target name="build-jif-sig">
    <jifc     srcdir="${home}/src/jif-sig" includes="jif/principals/Worker.jif">
      <arg value="-trusted-providers" />
    </jifc>

    <jifsigc  srcdir="${home}/src/jif-sig" excludes="jif/principals/Worker,jif">
      <arg value="-trusted-providers" />
    </jifsigc>
  </target>

  <target name="build-jif-java">
    <jifjavac srcdir="${home}/src/jif-sig" />
  </target>

  <target name="build-jif-principals" depends="build-jif-sig">
    <jifc srcdir="${home}/src/jif" includes="jif/principals/*.jif">
      <arg value="-trusted-providers" />
    </jifc>
  </target>
    
  <target name="build-jif-util" depends="build-jif-sig">
    <jifc srcdir="${home}/src/jif" includes="util/*.jif">
      <arg value="-trusted-providers"/>
    </jifc>
  </target>

  <target name="build-jif-snapp" depends="build-jif-util">
    <jifc srcdir="${home}/src/jif" includes="snapp/*.jif" />
  </target>

  <target name="build-jif-mapserv" depends="build-jif-util">
    <jifc srcdir="${home}/src/jif" includes="mapserv/*.jif" />
  </target>

  <target name="build-jif-friendmap" depends="build-jif-sig,build-jif-java,build-jif-snapp, build-jif-mapserv">
    <jifc srcdir="${home}/src/jif" includes="friendmap/*.jif"/>
  </target>

  <target name="build-jif"
          description="Builds the Jif version of friendmap"
          depends="build-jif-friendmap,build-jif-principals">
    <jifc srcdir="${home}/src/jif" includes="Main.jif"/>
  </target>


  <!--
  ****************************************************************************
    Fabric local compilation targets
  ****************************************************************************
  -->

  <target name="build-trusted">
    <fabc-local srcdir="${home}/src/fabric/trusted" includes="**/*.fab">
      <arg value="-trusted-providers" />
    </fabc-local>
  </target>

  <target name="build-sig">
    <fabc-local srcdir="${home}/src/fabric/signatures" destdir="${home}/classes/fab-sig">
      <arg value="-sig" />
    </fabc-local>
  </target>

  <target name="build-local-snapp" depends="build-trusted">
    <fabc-local srcdir="${home}/src/fabric/snapp_1.0_codebase">
      <!--
      <arg value="-report" /> <arg value="debug=1" />
      <arg value="-rdebug" />
      -->
    </fabc-local>
  </target>

  <target name="build-local-mapserv" depends="build-trusted">
    <fabc-local srcdir="${home}/src/fabric/mapserv_1.0_codebase" >
        <!--
        <arg value="-rdebug" />
        -->
    </fabc-local>
  </target>

  <target name="build-local-friendmap" depends="build-local-snapp, build-local-mapserv, build-sig">
    <fabc-local srcdir="${home}/src/fabric/friendmap_1.0_codebase" />
  </target>

  <target name="build-local"
          depends="build-local-friendmap"
          description="Builds the fabric version of friendmap">
    <echo message="Boo-yah, the example builds in Mobile Fabric!" />
    <echo message="Now go for the mother load: ant publish-all."  />
    <echo message="You know you want to."                         />
  </target>


  <!--
  ******************************************************************************
    Fabric deployment targets
  ******************************************************************************
  -->

  <target name="publish-snapp-1.0" />

  <target name="publish-snapp-2.0"
          depends="publish-snapp-1.0" />

  <target name="publish-mapserv-1.0" />

  <target name="publish-friendmap-1.0"
          depends="publish-snapp-1.0, publish-mapserv-1.0" />

  <target name="publish-friendmap-2.0"
          depends="publish-friendmap-1.0, publish-snapp-2.0" />

  <target name="publish-scripts-snapp"
          depends="publish-snapp-1.0" />

  <target name="publish-scripts-mapserv"
          depends="publish-mapserv-1.0" />

  <target name="publish-scripts-friendmap"
          depends="publish-friendmap-1.0" />

  <target name="publish-scripts-users"
          depends="publish-friendmap-1.0" />

  <target name="publish-all"
          depends="publish-scripts-users,
                   publish-scripts-friendmap,
                   publish-scripts-snapp,
                   publish-scripts-mapserv" />

  <!--
  ******************************************************************************
    Macros
  ******************************************************************************
  -->

  <!-- fabc-publish
       verify and publish fabric code
  -->
  <macrodef name="fabc-publish">
    <attribute name="worker" />
    <attribute name="store"  />
    <sequential />
  </macrodef>

  <!-- fabc-local
       compile fabric code locally
  -->
  <macrodef name="fabc-local">
    <attribute name="srcdir" />
    <attribute name="destdir" default="${home}/classes/fabric"/>
    <attribute name="includes" default="**/*.fab" />
    <attribute name="excludes" default="" />
    <element name="extra-args" implicit="true" optional="yes"/>
    <sequential>
      <mkdir dir="${home}/classes/fabric" />
      <apply executable="bash"
             parallel="true"
             failonerror="true"
             dir="@{srcdir}"
             dest="${home}/classes/fabric"
             relative="false"
             skipemptyfilesets="true"
             vmlauncher="false">
        <arg value="${fabc}" />
        <arg value="-g" />
        <arg value="-e" />
        <arg value="-d" />         <arg value="@{destdir}" />
        <arg value="-sourcepath"/> <arg value="@{srcdir}" />
        <arg value="-classpath" /> <arg value="${home}/classes/fabric" />
        <arg value="-addsigcp" /> <arg value="${home}/classes/fab-sig" />
        <extra-args />
        <srcfile />

        <fileset dir="@{srcdir}" includes="@{includes}" excludes="@{excludes}" />
        <globmapper from="*.fab" to="*.class" />
      </apply>
    </sequential>
  </macrodef>

  <!-- jifc
       compile jif code
  -->

  <macrodef name="jifc">
    <attribute name="srcdir" />
    <attribute name="includes" default="**/*.jif" />
    <attribute name="excludes" default="" />
    <element name="extra-args" implicit="true" optional="yes"/>
    <sequential>
      <mkdir dir="${home}/classes/jif" />
      <apply executable="bash"
             parallel="true"
             failonerror="true"
             dir="${home}"
             skipemptyfilesets="true"
             dest="${home}/classes/jif/"
             vmlauncher="false">
        <arg value="${jifc}"/>
        <!--<arg value="-fail-on-exception"/>-->
        <arg value="-untrusted-providers"/>
        <arg value="-e"/>
        <arg value="-sourcepath" /> <arg value="@{srcdir}"              />
        <arg value="-d"          /> <arg value="${home}/classes/jif"    />
        <arg value="-classpath"  /> <arg value="${home}/classes/jif"    />
        <arg value="-classpath"  /> <arg value="${home}/classes/jif-sig-impl"    />
        <arg value="-addsigcp"  /> <arg value="${home}/classes/jif-sig" />
        <extra-args />
        <srcfile />

        <fileset dir="@{srcdir}" includes="@{includes}" excludes="@{excludes}" />
        <globmapper from="*.jif" to="*.class" />
      </apply>
    </sequential>
  </macrodef>


  <!-- jifsigc
       compile jif signatures
  -->
  <macrodef name="jifsigc">
    <attribute name="srcdir" />
    <attribute name="includes" default="**/*.jif" />
    <attribute name="excludes" default="" />
    <element name="extra-args" implicit="true" optional="yes"/>
    <sequential>
      <mkdir dir="${home}/classes/jif" />
      <apply executable="bash"
             parallel="true"
             failonerror="true"
             dir="${home}"
             skipemptyfilesets="true"
             dest="${home}/classes/jif/"
             vmlauncher="false">
        <arg value="${jifc}"/>
        <!--<arg value="-fail-on-exception"/>-->
        <arg value="-e"/>
        <arg value="-sourcepath" /> <arg value="@{srcdir}"                />
        <arg value="-d"          /> <arg value="${home}/classes/jif-sig"  />
        <arg value="-classpath"  /> <arg value="${home}/classes/jif"      />
        <extra-args />
        <srcfile />

        <fileset dir="@{srcdir}" includes="@{includes}" excludes="@{excludes}" />
        <globmapper from="*.jif" to="*.class" />
      </apply>
    </sequential>
  </macrodef>

  <!-- jifjavac
       compile java implementations of jif signatures
  -->
  <macrodef name="jifjavac">
    <attribute name="srcdir" />
    <attribute name="includes" default="**/*.java" />
    <attribute name="excludes" default="" />
    <element name="extra-args" implicit="true" optional="yes"/>
    <sequential>
      <mkdir dir="${home}/classes/jif-sig-impl" />
      <javac srcdir="@{srcdir}"
             destdir="${home}/classes/jif-sig-impl"
             includes="@{includes}"
             excludes="@{excludes}"
             classpath="${jif.home}/rt-classes">
        <extra-args />
      </javac>
    </sequential>
  </macrodef>

</project>

<!--
vim: ts=2 sw=2 et ai
-->
