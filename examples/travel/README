Airline Travel Webapp Example
=============================

This is a suite of web applications implemented on top of Fabric. It
consists of three simple webapps: one for a customer to purchase airline
tickets, one for an airline agent to examine the number of tickets sold,
and one for a bank manager to examine account balances.

These webapps are standalone, so they can be started without any extra
programs.

This directory contains the following sub-directories:

  - src: source code for the travel example, written in Fabric
  - bin: a collection of scripts for running the example
  - etc: configuration files for the example's stores and workers
  - web: supporting files (HTML, CSS, etc.) for the webapps


Using
-----
This example uses three stores ("bank", "airline", and "broker") and
three workers ("customer", "bankweb" and "airlineweb"). The stores have
persistent application data and the workers each host a web application.

  0. Start in the travel example directory and compile the example:

      $ cd $FABRIC/examples/travel
      $ ant

  I. Start all the nodes and, if necessary, initialize their state:

    1. If you are starting from fresh stores, you will need to
       initialize the application state. Otherwise, skip to step 2.

       Run the Create.fil program to initialize state on all stores. You
       can do this by running the 'init-state' script:

	  $ bin/init-state

    2. Start up the broker store, airline store, bank store, customer
       worker, bankweb worker, and airlineweb worker. The 'start-all'
       script will start each node in a separate xterm window:

	  $ bin/start-all

       You can also use an xterm replacement (e.g., gnome-terminal or
       konsole):

	  $ XTERM=gnome-terminal bin/start-all

       Or, if you prefer, you can start each node individually in your
       favourite terminal emulator:

	  $ bin/start-store broker
	  $ bin/start-store airline
	  $ bin/start-store bank
	  $ bin/start-worker customer
	  $ bin/start-worker bankweb
	  $ bin/start-worker airlineweb

  II. Start the web applications by running the 'start-webapps' script:

	  $ bin/start-webapps

      The customer application can be accessed at:
       
	http://localhost:8080/customer

      The bank application can be accessed at:

	http://localhost:8081/bank

	User: bank
	Pass: password

      The airline application can be accessed at:

	http://localhost:8082/airline

	User: airline
	Pass: password

  III. Exit the stores with the "exit" command in each console (you can
       also use CTRL-D). Exit the workers with CTRL-C.

       After exiting the nodes, you can demonstrate the application's
       persistent state by starting up the nodes and running the
       application again (steps I.1 and II).

       While the nodes are shut down, you can clean up the stores'
       persistent state by removing 'var' from the travel example
       directory:

	  $ rm -rf var

