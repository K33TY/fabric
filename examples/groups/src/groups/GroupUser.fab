package groups;

import auth.*;
import fabricated.util.*;

public class GroupUser extends User {
  protected Map[{this←}]{this←}@{⊤→this.store$} publicGroups;
  protected Map[{this→;this←}]{this→;this←}@{⊤→this.store$} privateGroups;
  
  public GroupUser{this}(principal{this} servP, String{this} name, String{this} password) where authority (this) {
    super(name, password);
    endorse ({this←}) {
      try {
        publicGroups = new HashMap(new StringComparator(), new PrincipalComparator());
        privateGroups = new HashMap(new StringComparator(), new PrincipalComparator());
        addDelegatesTo(servP);
      } catch (Exception e) {
        throw new Error("GroupUser: impossible", e);
      }
    }
  }
  
  public Group[this]{this←} createPublicGroup{this←}(String{this←} name) throws (Exception{this←}) 
  where authority(this)    
  {
    // for some reason, the @ store is required here...
    // maybe the default location for labels is screwy?
    final label lbl = new label{this←}@store$;
    Group g = createGroup(lbl, name);
    publicGroups.put(name, g);
    return g;
  }

  public Group[this]{this→;this←} createPrivateGroup{this→;this←}(String{this→;this←} name) throws (Exception{this→;this←}) 
  where authority(this)      
  {
    // for some reason, the @ store is required here...
    // maybe the default location for labels is screwy?
    final label lbl = new label{this→;this←}@store$;    
    Group g = createGroup(lbl, name);
    privateGroups.put(name, g);
    return g;
  }

  public Group[this]{*lbl} createGroup{*lbl}(label lbl, String name) throws (Exception{*lbl}) 
  where authority(this),      
    {this←} <= lbl,
    lbl <= {this→;this←},
    {lbl; name} <= {*lbl}
  {
    try {
      if (name == null) throw new NullPointerException();
      final Group[this] g = new Group[this](lbl, this, name);
      if (g.lbl <= lbl) return g;
    } catch (Exception e) {
      throw new Error("GroupUser:50:impossible", e);
    }
    throw new Error("GroupUser:51:impossible");
  }

  public String{this;this←} toJson() {
    return "{ \"name\" : \"" + name() + "\"}"; 
  }
}
