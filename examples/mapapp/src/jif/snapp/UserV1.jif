package snapp;

import util.Group;

/**
 * A User object contains all of the data associated with a given user account
 * in the social network.  Users are principals, and delegate to the social
 * network as well as the user who created them.
 *
 * The V1 stands for version 1.  In Fabric, V1 and V2 will both be named User,
 * just in different codebases.
 */
public class UserV1 extends AbstractPrincipal {

  /** The user's location, only readable by members of the locationInfo group */
  public final Location [{this←;this→locationInfo}] {this←} location;

  /** The user's friends,  only readable by members of the friendInfo   group */
  public final Group    [{this←;this→friendInfo}]   {this←}   friends;


  public final Snapp {this←} network;               /* The social network that can act for this account. */
  public final Group[{this←}] {this←} friendInfo;   /* The group containing anyone who can learn the user's friends */
  public final Group[{this←}] {this←} locationInfo; /* The group containing anyone who can see the user's location */

  public UserV1(String name, principal owner, Snapp network) throws NullPointerException {
    super(name);

    this.addDelegatesTo(owner);
    this.addDelegatesTo(network);

    this.network = network;

    this.friendInfo   = new Group[{this←}]();
    this.locationInfo = new Group[{this←}]();
    this.friends      = new Group[{this←;this→friendInfo}]();

    this.location = new Location();
  }

  public void setLocation(Location[{this←;this→friendInfo}] loc) {
    this.location = loc;
  }

  public void addFriend(UserV1 friend) {
    this.friends.add(friend);
  }

  public void removeFriend(UserV1 friend) {
    if (friend == this)
      throw new Exception("you have to be your own friend");
    this.friends.remove(friend);
  }

}

/*
** vim: ts=2 sw=2 et cindent cino=\:0 syntax=java
*/
