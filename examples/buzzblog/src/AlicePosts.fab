import fabric.runtime.Runtime;

class AlicePosts[label postRead, label postWrite]
  where
    postRead  ⊑ {⊤→; postWrite},
    postWrite ⊑ {postRead; ⊥←}
{

  public static void run{workerP<-}(
      principal{workerP<-} workerP,
      BuzzBlogAPI[postRead, postWrite]{*postRead;*postWrite} api
  ):{workerP->;workerP<-} {
    atomic {
      // Get a reference to the store called "store".
      final Store store = FabricWorker.getWorker().getStore("alicenode");

      // Get a reference to the runtime.
      final Runtime[workerP] runtime = Runtime[workerP].getRuntime();

      // Get principals for alice, bob, and carol.
      final principal alice = 
          FabricWorker.getWorker().getWorker("alicenode").getPrincipal();
      final principal bob = 
          FabricWorker.getWorker().getWorker("bobnode"  ).getPrincipal();
      final principal carol = 
          FabricWorker.getWorker().getWorker("carolnode").getPrincipal();

      final int{*postRead; *postWrite} postId = 0;
      final String{*postRead; *postWrite} firstPost = 
        "This is the fizzy blog post that Alice wrote.";
      final String{*postRead; *postWrite} secondPost = 
        "This is the updated post that Alice wrote.";

      String{alice->} printme = "";

      if (workerP equiv alice && alice equiv store && new label {⊤←store} <= postWrite) {
        // Alice should be able to write the post.
        if (new label{workerP← } <= new label{*postRead; *postWrite}) { 
          // Alice should be able to read it too.
          if (new label{*postRead; *postWrite} <= new label{workerP→ } ) { 
            final String{*postRead;*postWrite} firstView =
              api.viewOrCreatePost(postId, store, firstPost);
            printme = printme + "\n" + firstView;

            String{*postRead; *postWrite} suffix = "";
            if (firstView.indexOf("fizz") >= 0) {
              suffix = "buzz";
            } else {
              if (firstView.indexOf("buzz") >= 0) {
                suffix = "fizz";
              }
            }

            printme = printme + "\n" + 
              api.updatePost(postId, secondPost + " - " + suffix);
          } else printme = printme + "\n{*postRead; *postWrite} ⊑ {p→ }  failed";
        } else printme = printme + "\n{p←} ⊑ {*postRead; *postWrite} failed";
      } else printme = printme + "\nThe permission checking if block failed.";
      if (workerP equiv alice)
        runtime.out().println(printme);
    }
  }
}
