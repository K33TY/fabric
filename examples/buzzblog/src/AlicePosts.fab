import fabric.runtime.Runtime;

class AlicePosts {

  public static void main{p<-}@{*->}(principal{p<-} p, String[] args):{p->;p<-}@{_->}
  {
    atomic {
      // Get a reference to the store called "store".
      final Store store = FabricWorker.getWorker().getStore("alicenode");

      // Get a reference to the runtime.
      final Runtime[p] runtime = Runtime[p].getRuntime();

      // Get principals for alice, bob, and carol.
      final principal alice = 
          FabricWorker.getWorker().getWorker("alicenode").getPrincipal();
      final principal bob = 
          FabricWorker.getWorker().getWorker("bobnode"  ).getPrincipal();
      final principal carol = 
          FabricWorker.getWorker().getWorker("carolnode").getPrincipal();

      final label postRead  = new label{
        (alice,bob),carol → 
      }@store;

      final label postWrite  = new label{
        (alice&bob)&carol ← alice
      }@store;

      final String{*postRead; *postWrite} postId = "alicePost";
      final String{*postRead; *postWrite} firstPost = 
        "This is the fizzy blog post that Alice wrote.";
      final String{*postRead; *postWrite} secondPost = 
        "This is the updated post that Alice wrote.";

      String{alice->} printme = "";

      if (p equiv alice && alice equiv store) {
        // Alice should be able to write the post.
        if (new label{p← } <= postWrite) { 
          // Writers should be able to read it too, especially Alice.
          if (postRead <= new label{W2R(*postWrite)} && new label{W2R(*postWrite)} <= new label{p→}/* && postRead <= new label{p->}*/) { 
            final BuzzBlogAPI[postRead, postWrite] api = 
              new BuzzBlogAPI[postRead, postWrite]@store();
            final String{*postRead;*postWrite} firstView =
              api.viewOrCreatePost(postId, store, firstPost);
            printme = printme + "\n" + firstView;

            String{*postRead; *postWrite} suffix = "";
            if (firstView.indexOf("fizz") >= 0) {
              suffix = "buzz";
            } else {
              if (firstView.indexOf("buzz") >= 0) {
                suffix = "fizz";
              }
            }

            printme = printme + "\n" + 
              api.updatePost(postId, store, secondPost + " - " + suffix);
          } else printme = printme + "\n{*postRead; *postWrite} ⊑ {p→ }  failed";
        } else printme = printme + "\n{p←} ⊑ {*postRead; *postWrite} failed";
      } else printme = printme + "\nThe permission checking if block failed.";
      if (p equiv alice)
        runtime.out().println(printme);
    }
  }
}
