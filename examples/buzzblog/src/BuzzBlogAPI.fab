import fabric.util.Map;

class BuzzBlogAPI[label postLabel] {

  // Returns the string view of the post with the given id at the given store
  public String{postLabel} viewPost{store}(String postId, final Store store)
    where (postId <= postLabel, store <= postLabel ) {
    final Map root = store.getRoot()
    if (root != null) {
      final Post[postLabel] post = (Post[postLabel]) root.get(postId);
      if (post != null) {
        return post.view();
      } else {
        return "post came back null";
      }
    } else {
      return "root came back null";
    }
  }

  // updates a post given some new content, returns a message about how well 
  //  that went.
  public String{postLabel} updatePost{store}(String postId, final Store store, 
                                             String{postLabel} newContent)
    where (postId <= postLabel, store <= postLabel ) {
    final Map root = store.getRoot()
    if (root != null) {
      final Post[postLabel] post = (Post[postLabel]) root.get(postId);
      if (post != null) {
        String oldContent = post.view();
        post.update(newContent);
        return ("Post "+ postId +" updated from \""+ 
                oldContent + "\" to \"" + post.view()+"\"");
      } else {
        return "post came back null";
      }
    } else {
      return "root came back null";
    }
  }

  // The correct way to create a new post
  // If there is a post with the given id, it returns that post.
  // Otherwise, it makes a new one with the given content.
  // returns a message that's hopefully helpful.
  public String{postLabel} viewOrCreatePost{store}(String postId, final Store store, 
                                                   String{postLabel} newContent)
    where (postId <= postLabel, store <= postLabel ) {
    final Map root = store.getRoot()
    if (root != null) {
      final Post[postLabel] post = (Post[postLabel]) root.get(postId);
      if (post != null) {
        return post.view();
      } else {
        try {
          final Post[postLabel] post = new Post[postLabel]@store(newContent);
          root.put(postId,post);
          return "Created new post: "+post.view();
        } catch (Exception e) {
          return "something threw an exception while creating a new post "+e;
        }
      }
    } else {
      return "root came back null";
    }
  }
}
