package webapp.blog;

import fabric.util.ArrayList;
import fabric.util.Collections;
import java.util.Date;
import fabric.util.List;

public class BlogPost {

  private String content;
  private String title;
  private /*final*/ Date creationTime;
  private int views;
  private /*final*/ int id;
  private /*final*/ List/*Comment*/ comments;
  private static int counter = 0;

  public BlogPost webapp$blog$BlogPost$(String title, String content) {
    creationTime = new Date();
    id = ++counter;
    comments = new ArrayList/*Comment*/().fabric$util$ArrayList$();

    fabric$lang$Object$();

    Statistics.getInstance().registerCreate();
    this.content = content;
    this.title = title;
    views = 0;

    return this;
  }

  public String getContent() {
    Statistics.getInstance().registerRead(this);
    return content;
  }

  public void setContent(String content) {
    Statistics.getInstance().registerUpdate(this);
    this.content = content;
  }

  public Date getCreationTime() {
    Statistics.getInstance().registerRead(this);
    return creationTime;
  }

  public int getViews() {
    Statistics.getInstance().registerRead(this);
    return views;
  }

  public void incrementViews() {
    Statistics.getInstance().registerUpdate(this);
    views++;
  }

  public void setTitle(String title) {
    Statistics.getInstance().registerUpdate(comments);
    this.title = title;
  }

  public String getTitle() {
    Statistics.getInstance().registerRead(this);
    return title;
  }
  
  public int getNumComments() {
    atomic {
      return comments.size();
    }
  }

  public void addComment(Comment c) {
    Statistics.getInstance().registerUpdate(comments);
    comments.add(c);
  }

  public List/*Comment*/ getComments() {
    Statistics.getInstance().registerRead(this);
    return Collections.unmodifiableList(Diagnostics.getLocalStore(), comments);
  }

  public void removeComment(Comment c) {
    Statistics.getInstance().registerUpdate(comments);
    comments.remove(c);
  }

  public int getId() {
    Statistics.getInstance().registerRead(this);
    return id;
  }

  public Object $initLabels() {
    // update label: {_ <-}
    // access policy: {_ ->}
    this.$updateLabel = LabelUtil.noComponents();
    this.$accessPolicy = LabelUtil.bottomConf();

    return this;
  }

}
