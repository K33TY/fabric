Bidding Agent Mobile Code Example
=================================

This is the auction example program.  It is intended to model a complex auction
in which sellers submit confidential sales strategies, and a buyer submits a
confidential purchasing strategy.  Each seller may make an offer based on the
buyer, and the buyer may then choose among these options.  At the end of the
auction, the identity of the winner is revealed to all participants.

This directory contains the following sub-directories:

  - src: source code for the auction example
  - bin: a collection of scripts for running the example
  - etc: configuration files for the example's Fabric nodes

Compiling
---------
To build the initialization code that will set up the principal hierarchy,
run 'ant' in the auction example directory:

  $ ant

You can expect messages warning that certain exceptions will be treated as
fatal errors during this and subsequent steps.
TODO: remove and/or fix spurious error messages.


Using
-----
This example uses four stores ("brokerStore", "airlineAStore", "airlineBStore",
and "userStore").

  0. Start in the auction example directory:

      $ cd $FABRIC/examples/auction

  1. Start up instances of the broker, airline, and user stores. The
     'start-all' script will start each store in a separate xterm window:

      $ bin/start-all

     You can also use an xterm replacement (e.g., gnome-terminal or konsole):

      $ XTERM=gnome-terminal bin/start-all

     Or, if you prefer, you can start each store individually in your favourite
     terminal emulator:

      $ bin/start-store brokerStore
      $ bin/start-store airlineAStore
      $ bin/start-store airlineBStore
      $ bin/start-store userStore

     If you are starting from fresh stores, you will need to initialize the
     application state by following the next step.  Otherwise, skip to step 3
     below.

  2. Run the 'initialize' script to initialize the stores' state.  This will
     initialize the principal hierarchy, publish the example's code to the
     stores, and initialize the application's state.

      $ bin/initialize

  3. The 'auction' script will run the example.  You should see the output in
     the broker store's console.

      $ bin/auction

  4. You can clean up the stores' persistent state by removing 'var' from the
     auction example directory:

      $ rm -rf var

