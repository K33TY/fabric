import java.io.PrintStream;
import jif.runtime.Runtime;

class Main  {
    public static final void main{⊤ <- }  (principal{*provider} p, String args[])  throws SecurityException, IllegalArgumentException  
	where caller(p), provider actsfor p,
	{*provider} equiv {*AirlineExample.provider},
	{*provider} equiv {*IAirlineServer.provider},
	{*provider} equiv {*AirlineServer.provider},
	{*provider} equiv {*AirlineAgent.provider}
    {
	PrintStream[{}] out = null;
          try {
              Runtime[p] runtime = Runtime[p].getRuntime();
              out = runtime==null?null:runtime.stdout(new label {});
          }
          catch (SecurityException e) {
              // just let out be null.
          }

          PrintStream[{}] out1 = endorse(out, {*provider; p->; _<-_} to {{p→p; p<-*} ⊔ {⊤→⊤;⊤←⊤} ⊓ {*provider}});
          PrintStream[{}] out2 = declassify(out1,  {} );
	  
	  new AirlineExample  ().go(out2); // Jif automatically infers principals? 
    }

}
