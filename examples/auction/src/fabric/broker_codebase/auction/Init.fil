package auction;
import fabric.util.Map;

public class Init {
    public static void main(String[] args) {
        atomic {
            DelegatingPrincipal brokerWorker = (DelegatingPrincipal) 
                Worker.getWorker().getPrincipal();
            System.out.println("Got broker principal");

            DelegatingPrincipal airlineAWorker =  (DelegatingPrincipal) 
                Worker.getWorker().getWorker(Config.airlineAWorkerName).getPrincipal();
            DelegatingPrincipal airlineAStore =  (DelegatingPrincipal) 
                Worker.getWorker().getStore(Config.airlineAStoreName).getPrincipal();
            System.out.println("Got airline A principals");

            DelegatingPrincipal airlineBWorker =  (DelegatingPrincipal) 
                Worker.getWorker().getWorker(Config.airlineBWorkerName).getPrincipal();
            DelegatingPrincipal airlineBStore =  (DelegatingPrincipal) 
                Worker.getWorker().getStore(Config.airlineBStoreName).getPrincipal();
            System.out.println("Got airline B principals");

            DelegatingPrincipal userWorker =      (DelegatingPrincipal) 
                Worker.getWorker().getWorker(Config.userWorkerName).getPrincipal();
            DelegatingPrincipal userStore =  (DelegatingPrincipal) 
                Worker.getWorker().getStore(Config.userStoreName).getPrincipal();
            System.out.println("Got user principals");

            if( airlineAWorker.delegatesTo(brokerWorker)
                 && airlineAWorker.delegatesTo(airlineAStore)
                 && airlineBWorker.delegatesTo(brokerWorker)
                 && airlineBWorker.delegatesTo(airlineBStore)
                 && userWorker.delegatesTo(brokerWorker)
                 && userWorker.delegatesTo(userStore))
                System.out.println("PRE: OK!");
            else
                System.out.println("PRE: FAIL!");

            // make broker top
            airlineAWorker.addDelegatesTo(brokerWorker);
            airlineAWorker.addDelegatesTo(airlineAStore);
            System.out.println("A Delegated");
            airlineBWorker.addDelegatesTo(brokerWorker);
            airlineBWorker.addDelegatesTo(airlineBStore);
            System.out.println("B Delegated");
            userWorker.addDelegatesTo(brokerWorker);
            userWorker.addDelegatesTo(userStore);
            System.out.println("User Delegated");
            if( airlineAWorker.delegatesTo(brokerWorker)
                 && airlineAWorker.delegatesTo(airlineAStore)
                 && airlineBWorker.delegatesTo(brokerWorker)
                 && airlineBWorker.delegatesTo(airlineBStore)
                 && userWorker.delegatesTo(brokerWorker)
                 && userWorker.delegatesTo(userStore))
                System.out.println("OK!");
            else
                System.out.println("FAIL!");
        }
    }
}

/*
** vim: ts=4 sw=4 et cindent cino=\:0
*/
