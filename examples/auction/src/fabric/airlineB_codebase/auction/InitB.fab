package auction;
import fabric.util.Map;
import fabric.runtime.Runtime;

public class InitB
{
  public static final void main{* <- }  (principal{*<-} p, String[] args):{p<-;p->} throws SecurityException, IllegalArgumentException  
		where caller(p)
  {
	  //already in transaction due to method constraints
      final Store store = worker$.getStore(Config.airlineBStoreName);
	  final principal w = worker$.getPrincipal();
      if (store actsfor p 
			&& store actsfor w) {
        Map root;
	try {
	root = store.getRoot();
	} catch (RuntimeException e) { throw new Error(); }
	try {
        root.put(Config.airlineBServerName, new airlineB.Server[w]@store(13500, 100));
	} catch (RuntimeException e) { throw new Error(); }
      }
	  else throw new Error(Config.airlineBStoreName + " must act for worker principal.");
  }
}
