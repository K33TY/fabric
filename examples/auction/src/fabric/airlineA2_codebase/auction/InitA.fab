package auction;
codebase cb;
import cb.auction.Config;
import fabric.util.Map;
import fabric.runtime.Runtime;
public class InitA
{
  public static final void main{* <- }  (principal{*<-} p, String[] args):{p<-;p->}   throws SecurityException, IllegalArgumentException  
		where caller(p)
  {
	  //already in transaction due to method constraints
      final Store store = worker$.getStore(Config.airlineAStoreName);
	  final principal w = worker$.getPrincipal();
      if (store actsfor p 
			&& store actsfor w) {
        Map root = store.getRoot();
        root.put(Config.airlineAServerName, new airlineA.Server[w]@store(13500, 100));
      }
	  else 
		throw new Error(Config.airlineAStoreName + " must act for worker principal.");
  }
}
