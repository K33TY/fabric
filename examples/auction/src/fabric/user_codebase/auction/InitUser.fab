package auction;
import fabric.util.Map;
import fabric.runtime.Runtime;

public class InitUser
{
  public static final void main{* <- } (principal{*<-} p, String[] args):{p<-;p->}   
	throws SecurityException, IllegalArgumentException  
		where caller(p)
  {
	  //already in transaction due to method constraints
      final Store store = worker$.getStore(Config.userStoreName);
	  final principal w = worker$.getPrincipal();
	  if (store actsfor p
			&& store actsfor w) {
        Map root;
	try {
	root = store.getRoot();
	} catch (RuntimeException e) { throw new Error(); }
	try {
      	root.put(Config.userServerName, new user.User[w]@store());
	} catch (RuntimeException e) { throw new Error(); }
      }
	  else {
		if (store actsfor p)
			if (store actsfor w)
				if (store actsfor w)
					;
				else 
        			throw new Error("User.provider must be <= {store<-worker}.");
			else
        		throw new Error(Config.userStoreName + " must act for worker .");
		else		
        	throw new Error(Config.userStoreName + " must act for principal p");
	  }
  }
}
