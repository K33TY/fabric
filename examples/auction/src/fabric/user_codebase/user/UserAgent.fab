/**
 * Copyright (C) 2010-2014 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package user;
import broker.Offer;

public class UserAgent[label Auction] implements broker.UserAgent[Auction] 
	where {*broker.UserAgent.provider} <= {*provider}, {*broker.UserAgent.provider;⊥←} equiv {*provider;⊥←}
{
    public int {Auction} choice{Auction}(Offer [Auction]{Auction} offer1, Offer[Auction]{Auction} offer2)  
		where {*provider;⊥←} <= {Auction;⊥←}
	{  // return -1 if offer1 is as good or better than offer2
		if (offer1 == null  && offer2 == null) return 0;
		if (offer1 == null) return 1;
		if (offer2 == null) return -1; 

		if (offer1.price < offer2.price) return -1;
		if (offer2.price > offer2.price) return 1;
		return 0;
    }
}
