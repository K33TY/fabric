<!--
  This is the Apache Ant build file for the Auction exampl
-->

<project name="auction" default="build-all" basedir=".">

  <!--
  ****************************************************************************
    Global properties for this build.
  ****************************************************************************
  -->

  <import file="../../common.xml" />

  <dirname property="home" file="${ant.file}"/>
  <property name="home.codebases" value="${home}/codebases"/>

  <path id="standard.classpath">
    <path refid="lib.classpath" />
  </path>

  <property name="broker.src" value="${home}/src/broker_codebase/"/>
  <property name="airlineA.src" value="${home}/src/airlineA_codebase/"/>
  <property name="airlineB.src" value="${home}/src/airlineB_codebase/"/>
  <property name="user.src" value="${home}/src/user_codebase/"/>

  <property name="broker.worker" value="brokerWorker"/>
  <property name="airlineA.worker" value="airlineAWorker"/>
  <property name="airlineB.worker" value="airlineBWorker"/>
  <property name="user.worker" value="userWorker"/>

  <property name="broker.codebase.file" value="${home.codebases}/${broker.worker}.codebase"/>
  <property name="airlineA.codebase.file" value="${home.codebases}/${airlineA.worker}.codebase"/>
  <property name="airlineB.codebase.file" value="${home.codebases}/${airlineB.worker}.codebase"/>
  <property name="user.codebase.file" value="${home.codebases}/${user.worker}.codebase"/>

  <property name="broker.store" value="brokerStore"/>
  <property name="airlineA.store" value="airlineAStore"/>
  <property name="airlineB.store" value="airlineBStore"/>
  <property name="user.store" value="userStore"/>

  <!--
  ****************************************************************************
    Targets for cleaning up the directory tree.
  ****************************************************************************
  -->
  <target name="clean" description="Removes generated files">
    <delete dir="${home}/classes"/>
    <delete dir="${home}/codebases"/>
    <delete dir="${home}/.${broker.worker}_cache"/>
    <delete dir="${home}/.${user.worker}_cache"/>
    <delete dir="${home}/.${airlineA.worker}_cache"/>
    <delete dir="${home}/.${airlineB.worker}_cache"/>
  </target>

  <target name="clobber" depends="clean"
          description="Removes generated files and state of stores">
    <delete dir="${home}/var"/>
  </target>

  <!--
  ****************************************************************************
    Compilation targets.
  ****************************************************************************
  -->
  <target name="codebase-check">
    <uptodate property="broker.up-to-date" targetfile="${broker.codebase.file}">
      <srcfiles dir="${broker.src}" includes="**/*.fab" />
    </uptodate>
    <uptodate property="airlineA.up-to-date" targetfile="${airlineA.codebase.file}">
      <srcfiles dir="${airlineA.src}" includes="**/*.fab" />
      <srcfiles file="${broker.codebase.file}"/>
    </uptodate>
    <uptodate property="airlineB.up-to-date" targetfile="${airlineB.codebase.file}">
      <srcfiles dir="${airlineB.src}" includes="**/*.fab" />
      <srcfiles file="${broker.codebase.file}"/>
    </uptodate>
    <uptodate property="user.up-to-date" targetfile="${user.codebase.file}">
      <srcfiles dir="${user.src}" includes="**/*.fab" />
      <srcfiles file="${broker.codebase.file}"/>
    </uptodate>

  </target>

  <target name="load-codebases" depends="codebase-check,publish-all">
    <loadfile property="broker.codebase" srcFile="${broker.codebase.file}" failonerror="false"/>
    <loadfile property="airlineA.codebase" srcFile="${airlineA.codebase.file}"  failonerror="false"/>
    <loadfile property="airlineB.codebase" srcFile="${airlineB.codebase.file}"  failonerror="false"/>
    <loadfile property="user.codebase" srcFile="${user.codebase.file}" failonerror="false"/>
  </target>

  <target name="publish-all" depends="publish-broker, publish-airlineA, 
  	publish-airlineB, publish-user" description="Publish all source">
  </target>

  <target name="publish-broker" description="Publish broker source" depends="codebase-check"
  	unless="broker.up-to-date">
  	<antcall target="publish">
  		<param name="provider" value="${broker.worker}"/>
  		<param name="dest.store" value="${broker.store}"/>
  		<param name="codebase.dir" value="${broker.src}"/>
  		<param name="target.codebasefile" value="${broker.codebase.file}"/>
  		<param name="publish.args" value=""/>
    </antcall>
  </target>

  <target name="publish-airlineA" description="Publish Airline A source" depends="codebase-check" 
  	unless="airlineA.up-to-date">
  	<antcall target="publish">
  		<param name="provider" value="${airlineA.worker}"/>
  		<param name="dest.store" value="${airlineA.store}"/>
  		<param name="codebase.dir" value="${airlineA.src}"/>
  		<param name="target.codebasefile" value="${airlineA.codebase.file}"/>
  		<param name="publish.args" value="-addCodebase ${broker.codebase.file}"/>
    </antcall>
  </target>

  <target name="publish-airlineB" description="Publish Airline B source" depends="codebase-check"  
  	unless="airlineB.up-to-date">
  	<antcall target="publish">
  		<param name="provider" value="${airlineB.worker}"/>
  		<param name="dest.store" value="${airlineB.store}"/>
  		<param name="codebase.dir" value="${airlineB.src}"/>
  		<param name="target.codebasefile" value="${airlineB.codebase.file}"/>
  		<param name="publish.args" value="-addCodebase ${broker.codebase.file}"/>
    </antcall>
  </target>

  <target name="publish-user" description="Publish user source"  depends="codebase-check" 
  	unless="user.up-to-date">
  	<antcall target="publish">
  		<param name="provider" value="${user.worker}"/>
  		<param name="dest.store" value="${user.store}"/>
  		<param name="codebase.dir" value="${user.src}"/>
  		<param name="target.codebasefile" value="${user.codebase.file}"/>
  		<param name="publish.args" value="-addCodebase ${broker.codebase.file}"/>
    </antcall>
  </target>

  <target name="publish" description="Publish Fabric source">
    <mkdir dir="${home.codebases}"/>
    <apply executable="bash"
           parallel="true"
           failonerror="true"
           dir="${home}"
           relative="false"
           skipemptyfilesets="true"
           vmlauncher="false">
      <env key="FABRIC_HOME" value="${home}"/>
      <arg value="${fabc}"/>
      <arg value="-g"/>
      <arg value="-e"/>
      <arg value="-d"          /> <arg value="${home.codebases}"/>
      <arg value="-publish-only" />
      <arg value="-codebase-output-file" /> <arg value="${target.codebasefile}"/>
      <arg value="-sourcepath" /> <arg value="${codebase.dir}" />
      <arg value="-worker" /> <arg value="${provider}" />
      <arg value="-deststore" /> <arg value="${dest.store}" />
      <arg line="${publish.args}"/> 
      <srcfile />
      <fileset dir="${codebase.dir}" includes="**/*.fab" />
    </apply>
  </target>

  <target name="build-init" description="Build init classes">


    <apply executable="bash"
           parallel="true"
           failonerror="true"
           dir="${home}"
           dest="${home}/classes"
           relative="false"
           skipemptyfilesets="true"
           vmlauncher="false">
      <arg value="${fabric.home}/bin/filc"/>
      <arg value="-g"/>
      <arg value="-d" /> <arg value="${home}/classes"/>
      <arg value="-cp"/> <arg pathref="standard.classpath" />
      <arg value="-cp"/> <arg value="${home}/classes" />
      <srcfile />
      <fileset dir="${home}" includes="**/*.fil" />
      <globmapper from="*.fil" to="*.class" />
    </apply>
  </target>

  <target name="run-init" depends="load-codebases">
    <exec executable="bash" failonerror="true" >
      <arg value="${home}/bin/start-worker"/>
      <arg line="--name ${airlineA.worker} ${airlineA.codebase}/auction.InitA"/>
    </exec>
    
    <exec executable="bash" failonerror="true" >
      <arg value="${home}/bin/start-worker"/>
      <arg line="--name ${airlineB.worker} ${airlineB.codebase}/auction.InitB"/>
    </exec>
    
    <exec executable="bash" failonerror="true" >
      <arg value="${home}/bin/start-worker"/>
      <arg line="--name ${user.worker} ${user.codebase}/auction.InitUser"/>
    </exec>	
  </target>
</project>
