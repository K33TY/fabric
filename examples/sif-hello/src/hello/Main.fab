package hello;

import sif.servlet.HTMLServlet;
import sif.servlet.Request;
import sif.servlet.SessionState;
import sif.servlet.SessionPrincipal;

import javax.servlet.ServletException;

public final class Main extends HTMLServlet[HelloServEP] {
    final Store{this}@{} localStore;
    public Main() throws ServletException {
        FabricWorker cl = FabricWorker.getWorker();
        Store lStore = null;        
        if (cl != null) {
            lStore = cl.getLocalStore();
        }
        localStore = lStore;
    }
    
    public void initialize{HelloServEP:;HelloServEP!:}() throws ServletException {
        addStartAction(new StartAction(this));
//        HelloAction2 ha = new HelloAction2(this);
//        addStartAction(ha);
//        HelloAction2.precomputePage(this, ha);
    }
    
    
    public String getPrivateHostID() throws ServletException {
        return "";
    }

    protected String defaultActionName(Request[HelloServEP] req) {
        return "greet";
    }
    
    // This method will only be called by the runtime
    protected SessionState{*lbl} createSessionState{*lbl}(label{*lbl} lbl,
            String{*lbl} id, SessionPrincipal{*lbl} session) {
        atomic {
            if (localStore != null && localStore equiv worker$ &&
                    lbl <= new label {⊤→worker$} && 
                    new label {⊤←worker$} <= lbl) {
                return new SessionState@localStore(id, session);
            }
        }
        return null;
    }
    
    // This method will only be called by the runtime
    protected SessionPrincipal createSessionPrincipal(String{worker$→;worker$←} id) {
        SessionPrincipal toReturn = null;
        atomic {
            if (localStore != null && localStore equiv worker$) {
                toReturn = new SessionPrincipal@localStore(id);
            }
        }
        return toReturn;
    }
    
    
}

