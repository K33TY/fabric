/**
 * Copyright (C) 2010-2014 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package fabric.lang.security;

public class PrincipalUtil {
//    private static int __JIF_SIG_OF_JAVA_CLASS$20030619 = 0;

    public static native boolean{p;q;q←} acts_for(Principal p, Principal q);

    public static native boolean{p;q;p←;q←} equivalentTo(Principal p, Principal q);

    public static native ActsForProof{p;q;q←;s}
	findActsForProof(Store s, Principal p, Principal q, java.lang.Object searchState);

//    public static native boolean verifyProof(ActsForProof[{lbl}]{p;q;q←} proof, 
//                                             Principal p, Principal q, label *lbl);

    public static native void notifyNewDelegation(Principal granter, Principal superior);

    public static native void notifyRevokeDelegation(Principal granter,
						     Principal superior);

    // This begin label should probably have side-effects at p
    public static native Capability[p, lb]
                authorize(principal p, Object authPrf, Closure[p, lb] c, label lb);
                
    public static native Object{c;lb;authPrf;p;*lb}
	execute{*lb}(principal p, Object authPrf, Closure[p, lb] c, label lb);

    public static native principal{*←*} nullPrincipal();
    
    public static native String stringValue(principal p); 

    public static native String toString(principal p); 
}
