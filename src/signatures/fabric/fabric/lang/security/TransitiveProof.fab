/**
 * Copyright (C) 2010-2014 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package fabric.lang.security;

/**
 * A proof that actor can act for granter, by showing that there is a principal
 * p such that actor can act for p, and p can act for granter. 
 */
public final class TransitiveProof extends ActsForProof {
    private final ActsForProof{this}@{store$→} actorToP;
    private final ActsForProof{this}@{store$→} pToGranter;
    private final principal{this}@{store$→} p;
    public TransitiveProof(ActsForProof{this} actorToP, principal{this} p, ActsForProof{this} pToGranter) {
        super(p, p); // dummy
        this.actorToP = actorToP;
        this.pToGranter = pToGranter;
        this.p = p;
    }
}
