/**
 * Copyright (C) 2010-2014 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package fabric.lang.security;

/**
 * Utility methods for labels.
 */
public class LabelUtil {
//    private static int __JIF_SIG_OF_JAVA_CLASS$20030619 = 0;
    public static native label noComponents();

    public static native label{owner; readers; *lbl; lbl} 
       readerPolicyLabel(label lbl, principal owner, principal{*lbl}[] readers);
    public static native label{owner; writers; *lbl; lbl} 
       writerPolicyLabel(label lbl, principal owner, principal{*lbl}[] writers);
       
    public static native ConfPolicy{owner; readers; *lbl; lbl} 
       readerPolicy(label lbl, principal owner, principal{*lbl}[] readers);

    public static native ConfPolicy{owner; reader} 
       readerPolicy(principal owner, principal reader);
       
    public static native IntegPolicy{owner; writers; *lbl; lbl} 
       writerPolicy(label lbl, principal owner, principal{*lbl}[] writers);

    public static native IntegPolicy{owner; writer} 
       writerPolicy(principal owner, principal writer);
       
    public static native label toLabel(ConfPolicy cPolicy, IntegPolicy iPolicy) throws (NullPointerException{cPolicy;iPolicy});
    public static native label toLabel(ConfPolicy cPolicy) throws (NullPointerException{cPolicy});
       
    public static native label join(label l1, label l2);
    public static native label meetLbl(label l1, label l2); // "meet" is a keyword, and can't be used
    
    public static native ConfPolicy join(ConfPolicy p1, ConfPolicy p2);
    public static native ConfPolicy meetPol(ConfPolicy p1, ConfPolicy p2);

    public static native IntegPolicy join(IntegPolicy p1, IntegPolicy p2);
    public static native IntegPolicy meetPol(IntegPolicy p1, IntegPolicy p2);

    public static native boolean equivalentTo(label l1, label l2);
    public static native boolean relabelsTo(label fromLbl, label toLbl); 
    public static native boolean acts_for(label actor, principal granter);

    public static native boolean isReadableBy(label lbl, principal p); 
    
    public static native String stringValue(label lb); 
    public static native String toString(label lb);
    public static native int hashCode(label lb);
}
