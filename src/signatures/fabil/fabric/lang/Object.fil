/**
 * Copyright (C) 2010-2013 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package fabric.lang;

public class Object extends java.lang.Object {
  /**
   * The label that protects the object at run time.
   */
  protected Label $updateLabel;
  
  /**
   * The object's access policy, specifying the program contexts in which it is
   * safe to use this object.
   */
  protected ConfPolicy $accessPolicy;
  
  /**
   * Initializes the object's update label and access policy.
   */
  public native Object $initLabels();
  
  public native boolean equals(Object o);
  
  /**
   * Calls $initLabels 
   */
  public native Object fabric$lang$Object$();
  
  public static native Object jif$cast$fabric_lang_Object(Object o);
  public static native boolean jif$Instanceof$fabric_lang_Object(Object o);

  public native Statistics createStatistics();
  
  /**
   * The store where this object resides.
   */
  public native Store $getStore();
  
  /**
   * HUGE HACK. THIS SHOULD NOT BE HERE. TODO XXX. REMOVE AFTER SURROGATES PROBLEM IS FIXED.
   */
  public native Object fetch();
  
  /**
   * A dummy method. This is a hack for working around reachability problems in
   * generated code.
   */
  public static native void _npe(Label lbl) throws NullPointerException;
}

