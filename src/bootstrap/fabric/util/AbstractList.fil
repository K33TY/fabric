package fabric.util;


abstract public class AbstractList extends fabric.util.AbstractCollection
  implements fabric.util.List
{
    
    native protected fabric.util.AbstractList fabric$util$AbstractList$();
    
    abstract public fabric.lang.JifObject get(final int index)
          throws java.lang.IndexOutOfBoundsException;
    
    native public boolean remove(final fabric.lang.JifObject o);
    
    native public boolean remove_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.JifObject o);
    
    native public boolean contains(final fabric.lang.security.Label lbl,
                                   final fabric.lang.JifObject elem);
    
    native public boolean contains_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.security.Label lbl, final fabric.lang.JifObject elem);
    
    native public void add(final int index, final fabric.lang.JifObject element)
          throws java.lang.IndexOutOfBoundsException;
    
    native public void add_remote(
      final fabric.lang.security.Principal worker$principal, final int index,
      final fabric.lang.JifObject element)
          throws java.lang.IndexOutOfBoundsException;
    
    native public fabric.lang.JifObject remove(final int index)
          throws java.lang.IndexOutOfBoundsException;
    
    native public fabric.lang.JifObject remove_remote(
      final fabric.lang.security.Principal worker$principal, final int index)
          throws java.lang.IndexOutOfBoundsException;
    
    native public int indexOf(final fabric.lang.JifObject o);
    
    native public int indexOf_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.JifObject o);
    
    native public int indexOf(final fabric.lang.security.Label lbl,
                              final fabric.lang.JifObject o);
    
    native public int indexOf_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.security.Label lbl, final fabric.lang.JifObject o);
    
    native public int lastIndexOf(final fabric.lang.JifObject o);
    
    native public int lastIndexOf_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.JifObject o);
    
    native public int lastIndexOf(final fabric.lang.security.Label lbl,
                                  final fabric.lang.JifObject o);
    
    native public int lastIndexOf_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.security.Label lbl, final fabric.lang.JifObject o);
    
    native public fabric.util.Iterator iterator();
    
    native public fabric.util.Iterator iterator_remote(
      final fabric.lang.security.Principal worker$principal);
    
    native public fabric.util.ListIterator listIterator();
    
    native public fabric.util.ListIterator listIterator_remote(
      final fabric.lang.security.Principal worker$principal);
    
    native public fabric.util.ListIterator listIterator(final int index)
          throws java.lang.IndexOutOfBoundsException;
    
    native public fabric.util.ListIterator listIterator_remote(
      final fabric.lang.security.Principal worker$principal, final int index)
          throws java.lang.IndexOutOfBoundsException;
    
    native public int hashCode();
    
    native public int hashCode_remote(
      final fabric.lang.security.Principal worker$principal);
    
    native public boolean equals(final fabric.lang.IDComparable o);
    
    native public boolean equals_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.IDComparable o);
    
    native public boolean equals(final fabric.lang.security.Label lbl,
                                 final fabric.lang.IDComparable o);
    
    native public boolean equals_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.security.Label lbl, final fabric.lang.IDComparable o);
    
    public AbstractList(final fabric.lang.security.Label jif$L) {
        super(jif$L);
    }
    
    native public void jif$invokeDefConstructor();
    
    native private void jif$init();
    
    native public static boolean jif$Instanceof(
      final fabric.lang.security.Label jif$L, final java.lang.Object o);
    
    native public static fabric.util.AbstractList
      jif$cast$fabric_util_AbstractList(final fabric.lang.security.Label jif$L,
                                        final java.lang.Object o);
    
    final native public fabric.lang.security.Label jif$getfabric_util_List_L();
}

class ListItr extends fabric.lang.Object implements fabric.util.ListIterator {
    
    native protected fabric.util.ListItr fabric$util$ListItr$(
      final fabric.util.List l);
    
    native protected fabric.util.ListItr fabric$util$ListItr$(
      final fabric.util.List l, final int index);
    
    native public boolean hasNext();
    
    native public boolean hasNext_remote(
      final fabric.lang.security.Principal worker$principal);
    
    native public fabric.lang.JifObject next()
          throws fabric.util.NoSuchElementException;
    
    native public fabric.lang.JifObject next_remote(
      final fabric.lang.security.Principal worker$principal)
          throws fabric.util.NoSuchElementException;
    
    native public boolean hasPrevious();
    
    native public boolean hasPrevious_remote(
      final fabric.lang.security.Principal worker$principal);
    
    native public fabric.lang.JifObject previous()
          throws fabric.util.NoSuchElementException;
    
    native public fabric.lang.JifObject previous_remote(
      final fabric.lang.security.Principal worker$principal)
          throws fabric.util.NoSuchElementException;
    
    native public int nextIndex();
    
    native public int nextIndex_remote(
      final fabric.lang.security.Principal worker$principal);
    
    native public int previousIndex();
    
    native public int previousIndex_remote(
      final fabric.lang.security.Principal worker$principal);
    
    native public void remove() throws java.lang.IllegalStateException;
    
    native public void remove_remote(
      final fabric.lang.security.Principal worker$principal)
          throws java.lang.IllegalStateException;
    
    native public void set(final fabric.lang.JifObject o)
          throws java.lang.IllegalStateException;
    
    native public void set_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.JifObject o)
          throws java.lang.IllegalStateException;
    
    native public void add(final fabric.lang.JifObject o)
          throws java.lang.ClassCastException,
        java.lang.IllegalArgumentException;
    
    native public void add_remote(
      final fabric.lang.security.Principal worker$principal,
      final fabric.lang.JifObject o)
          throws java.lang.ClassCastException,
        java.lang.IllegalArgumentException;
    
    public ListItr(final fabric.lang.security.Label jif$L) { super(); }
    
    native private void jif$init();
    
    native public static boolean jif$Instanceof(
      final fabric.lang.security.Label jif$L, final java.lang.Object o);
    
    native public static fabric.util.ListItr jif$cast$fabric_util_ListItr(
      final fabric.lang.security.Label jif$L, final java.lang.Object o);
    
    final native public fabric.lang.security.Label
      jif$getfabric_util_ListIterator_L();
    
    final native public fabric.lang.security.Label
      jif$getfabric_util_Iterator_L();
}
