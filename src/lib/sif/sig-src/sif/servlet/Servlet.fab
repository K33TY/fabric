/**
 * Copyright (C) 2010-2014 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package sif.servlet;

import java.io.*;
import javax.servlet.ServletException;
import javax.servlet.ServletConfig;
import sif.html.*;
import fabricated.util.Map;

/** A servlet contains the information that is shared across users and sessions.
 * It converts between the Java HttpServlet request processing style and this one. */

abstract public class Servlet[principal servletP] extends java.lang.Object {    
    private static int __JIF_SIG_OF_JAVA_CLASS$20030619 = 0;        
    private static int __JIF_SAFE_CONSTRUCTORS$20050907 = 0;
    private static int __JIF_PARAMS_RUNTIME_REPRESENTED$20051007 = 0;

    public native void initialize{servletP→; servletP←}() throws (ServletException{worker$→; worker$←});
    public native void initialize{servletP→; servletP←}(ServletConfig{servletP→; servletP←} sc) throws (ServletException{worker$→; worker$←});

    /**
     * If the request does not specify an action name, and there is no default
     * action name, this method is called to get a default action to invoke. May return
     * null if there is no default action to invoke.
     * 
     * @param req
     * @return the default action, used if the request does not specify an
     *         action.
     */
    protected native Action[servletP]{servletP→;req} defaultAction(Request[servletP] req);
    
    /**
     * If the request does not specify an action name, 
     * this method is called to get a default action name. May return
     * null if there is no default action name.
     * 
     * @param req
     * @return the default action name, used if the request does not specify an
     *         action.
     */
    protected native String{servletP→;req} defaultActionName(Request[servletP] req);

    public native final String{servletP→;p} initParameter(String p);
    
    public abstract String getPrivateHostID() throws ServletException;
    
    public native  void addStartAction{servletP→;servletP←}(Action[servletP]{servletP→;servletP←} a); 
    
    public native final Action[servletP]{servletP→;servletP←;action_name} findStartAction(String action_name);
    public native final Action[servletP]{req;action_name} findStartAction(Request[servletP]{req.session→} req, String{req.session→} action_name);

    public native final String{⊤←⊤} generateNonce();       
    protected native SessionState{*lbl} createSessionState{*lbl}(label{*lbl} lbl, String{*lbl} id, SessionPrincipal{*lbl} session);
    
}
