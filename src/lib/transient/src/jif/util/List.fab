package jif.util;

/**
 * A list of jif.lang.JifObjects.
 *
 * @see jif.util.Collection
 */
nonfabric public interface List[label L] extends Collection[L] {
    jif.lang.JifObject[L]{L;index} get(int index):{L;index}
	throws (IndexOutOfBoundsException{L;index});
    jif.lang.JifObject[L]{L} set{L}(int{L} index, jif.lang.JifObject[L]{L} element):{L}
	throws (IndexOutOfBoundsException{L});
    void add{L}(int{L} index, jif.lang.JifObject[L]{L} element):{L}
	throws (IndexOutOfBoundsException{L});
    jif.lang.JifObject[L]{L} remove{L}(int{L} index)
	throws (IndexOutOfBoundsException{L});

    int{L;o} indexOf(jif.lang.JifObject[L] o);
    int{L;o} lastIndexOf(jif.lang.JifObject[L] o);
    int{L;*lbl;lbl;o} indexOf(label lbl, jif.lang.JifObject[lbl] o);
    int{L;*lbl;lbl;o} lastIndexOf(label lbl, jif.lang.JifObject[lbl] o);

    ListIterator[L]{this} listIterator();
    ListIterator[L]{this;L} listIterator{L}(int{L} index)
	throws (IndexOutOfBoundsException{L});
}
