package jif.lang;

import fabric.util.*;

/**
 * Represents the join of confidentiality policies. This code is mostly copied
 * from Jif.
 */
public final class JoinConfPolicy extends JoinPolicy implements ConfPolicy {
  JoinConfPolicy(Set policies) {
    super(policies);
  }

  public ConfPolicy join(Core core, ConfPolicy p, Set s) {
    return LabelUtil.join(core, this, p, s);
  }

  public ConfPolicy join(ConfPolicy p, Set s) {
    return LabelUtil.join(this, p, s);
  }

  public ConfPolicy meet(Core core, ConfPolicy p, Set s) {
    return LabelUtil.meet(core, this, p, s);
  }

  public ConfPolicy meet(ConfPolicy p, Set s) {
    return LabelUtil.meet(this, p, s);
  }

  public ConfPolicy join(Core core, ConfPolicy p) {
    return LabelUtil.join(core, this, p);
  }

  public ConfPolicy join(ConfPolicy p) {
    return LabelUtil.join(this, p);
  }

  public ConfPolicy meet(Core core, ConfPolicy p) {
    return LabelUtil.meetPol(core, this, p);
  }

  public ConfPolicy meet(ConfPolicy p) {
    return LabelUtil.meetPol(this, p);
  }
}
