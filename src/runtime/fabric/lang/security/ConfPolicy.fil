/**
 * Copyright (C) 2010-2014 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package fabric.lang.security;

import java.util.Set;

/**
 * This code is mostly copied from Jif.
 */
public interface ConfPolicy extends Policy {
  /**
   * Returns the join of this policy and p. The set s contains all delegations
   * (i.e., DelegationPairs) that this join result depends upon.
   */
  ConfPolicy join(Store store, ConfPolicy p, java.util.Set/* <DelegationPair> */dependencies);

  ConfPolicy meet(Store store, ConfPolicy p, java.util.Set/* <DelegationPair> */dependencies);

  ConfPolicy join(Store store, ConfPolicy p);

  ConfPolicy meet(Store store, ConfPolicy p);

  ConfPolicy join(Store store, ConfPolicy p, boolean simplify);

  ConfPolicy meet(Store store, ConfPolicy p, boolean simplify);

  ConfPolicy join(Store store, ConfPolicy p, java.util.Set/*<DelegationPair>*/ dependencies,
          boolean simplify);

  ConfPolicy meet(Store store, ConfPolicy p, java.util.Set/*<DelegationPair>*/ dependencies,
          boolean simplify);
}
