package fabric.lang.security;

import fabric.util.*;

/**
 * Represents the meet of integrity policies. This code is mostly copied from
 * Jif.
 */
public final class MeetIntegPolicy extends MeetPolicy implements IntegPolicy {
  MeetIntegPolicy(Set policies) {
    super(policies);
  }

  public IntegPolicy join(Store store, IntegPolicy p, java.util.Set s) {
    return LabelUtil.join(store, this, p, s);
  }

  public IntegPolicy meet(Store store, IntegPolicy p, java.util.Set s) {
    return LabelUtil.meet(store, this, p, s);
  }

  public IntegPolicy join(Store store, IntegPolicy p) {
    return LabelUtil.join(store, this, p);
  }

  public IntegPolicy meet(Store store, IntegPolicy p) {
    return LabelUtil.meetPol(store, this, p);
  }

  public Object $initLabels() {
    // XXX What should this be?  Using completely permissive values for now.
    // update label: {_ <-}
    // access policy: {_ ->}
    this.$updateLabel = LabelUtil.noComponents();
    this.$accessPolicy = LabelUtil.bottomConf();

    return this;
  }
}
