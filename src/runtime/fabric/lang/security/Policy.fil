/**
 * Copyright (C) 2010-2014 Fabric project group, Cornell University
 *
 * This file is part of Fabric.
 *
 * Fabric is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 * 
 * Fabric is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 */
package fabric.lang.security;

import java.util.Set;

/**
 * A Policy is a component of a label, and is either an integrity policy or a
 * confidentiality policy. This code is mostly copied from Jif.
 */
public interface Policy {
  /**
   * Does this policy relabel to policy p? If this method returns true, then all
   * delegations that this result depend upon (i.e., DelegationPairs) should be
   * added to the set s. If this method returns false, then the set is not
   * altered at all.
   * 
   * @param p
   * @param dependencies
   * @return
   */
  boolean relabelsTo(Policy p, Set s);
}
