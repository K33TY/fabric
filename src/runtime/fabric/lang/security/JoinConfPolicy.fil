package fabric.lang.security;

import fabric.util.*;

/**
 * Represents the join of confidentiality policies. This code is mostly copied
 * from Jif.
 */
public final class JoinConfPolicy extends JoinPolicy implements ConfPolicy {
  JoinConfPolicy(Set policies) {
    super(policies);
  }

  public ConfPolicy join(Store store, ConfPolicy p, Set s) {
    return LabelUtil.join(store, this, p, s);
  }

  public ConfPolicy join(ConfPolicy p, Set s) {
    return LabelUtil.join(this, p, s);
  }

  public ConfPolicy meet(Store store, ConfPolicy p, Set s) {
    return LabelUtil.meet(store, this, p, s);
  }

  public ConfPolicy meet(ConfPolicy p, Set s) {
    return LabelUtil.meet(this, p, s);
  }

  public ConfPolicy join(Store store, ConfPolicy p) {
    return LabelUtil.join(store, this, p);
  }

  public ConfPolicy join(ConfPolicy p) {
    return LabelUtil.join(this, p);
  }

  public ConfPolicy meet(Store store, ConfPolicy p) {
    return LabelUtil.meetPol(store, this, p);
  }

  public ConfPolicy meet(ConfPolicy p) {
    return LabelUtil.meetPol(this, p);
  }
}
