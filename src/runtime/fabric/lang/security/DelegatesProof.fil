package fabric.lang.security;

import java.util.Set;
import fabric.lang.JifObject;
import fabric.lang.JifObjectWrapper;

/**
 * This code is mostly copied from Jif.
 */
public final class DelegatesProof extends ActsForProof {
  public DelegatesProof(Principal actor, Principal granter) {
    super(actor, granter);
  }

  public void gatherDelegationDependencies(Set s) {
    // don't count delegations from "p" to "p and ..." or delegations from
    // con/dis-junctive principals

    if (getGranter() instanceof DisjunctivePrincipal
        || getGranter() instanceof ConjunctivePrincipal) {
      return;
    }

    if (getActor() instanceof ConjunctivePrincipal) {
    	JifObject granter = 
    		(new JifObjectWrapper(getGranter().get$label())).
    			fabric$lang$JifObjectWrapper$(getGranter());
    	if(((ConjunctivePrincipal) getActor()).conjuncts.contains(granter))
    		return;
    }

    s.add(new SecurityCache.DelegationPair(getActor(), getGranter()));
  }
}
