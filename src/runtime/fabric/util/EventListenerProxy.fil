package fabric.util;

/**
 * An abstract wrapper for event listeners.  This allows subclasses to
 * attach additional parameters to an existing event listener to create
 * a new one.  Subclasses are expected to add methods to set and retrieve
 * any attached properties.
 *
 * @author Eric Blake (ebb9@email.byu.edu)
 * @since 1.4
 * @status updated to 1.4
 */
public abstract class EventListenerProxy implements EventListener
{
  /** The listener that this proxy wraps. */
  private final EventListener listener;

  /**
   * Construct a proxy event listener, given an existing one to augment.
   *
   * @param listener the listener to wrap
   */
  public EventListenerProxy(EventListener listener)
  {
    this.listener = listener;
  }

  /**
   * Return the wrapped event listener.
   *
   * @return the listener associated with this proxy
   */
  public EventListener getListener()
  {
    return listener;
  }
} // class EventListenerProxy
