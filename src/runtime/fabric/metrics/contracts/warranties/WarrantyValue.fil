package fabric.metrics.contracts.warranties;

import fabric.metrics.contracts.MetricContract;

/**
 * A utility class for tracking {@link WarrantyComp} results and associated
 * {@link MetricContract}s implying their validity.
 */
public class WarrantyValue/*<V>*/ {

  /** The result value. */
  public /*final V*/ Object value;
  /**
   * A {@link MetricContract} which, when valid, implies the value is current.
   */
  public /*final*/ MetricContract contract;

  /**
   * @param value
   *        the return value we're bundling in this {@link WarrantyValue}
   * @param contract
   *        the value's associated {@link MetricContract}
   */
  public WarrantyValue fabric$metrics$contracts$warranties$WarrantyValue$(/*V*/ Object value, MetricContract contract) {
    this.value = value;
    this.contract = contract;
    fabric$lang$Object$();
    return this;
  }

  /**
   * @return the time this result is expected to last (can be used to compare
   *         potential results so the {@link WarrantyComp} can return the
   *         longest lasting choice).
   */
  public long expectedLifetime() {
    return contract.getExpectedLifetime();
  }

  /*@Override*/
  public String toString() {
    return "WarrantyVal(" + value + ", " + contract + ")";
  }
}
